/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;

//ducanh
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import database.ConnectDB;
import DucAnh.DucAnh;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseEvent;

import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.Set;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
//ducanh

/**
 *
 * @author tth
 */
public class formChinh extends javax.swing.JFrame {

    /**
     * Creates new form formChinh
     */
    ConnectDB cn = new ConnectDB();
    DucAnh DucAnh = new DucAnh();

    String MaSanPham_chu = "";
    int MaSanPham_so = 0;
    String MaLoaiSanPham_chu = "";
    int MaLoaiSanPham_so = 0;
    String MaNhanVien_chu = "";
    int MaNhanVien_so = 0;
    String MaKhachHang_chu = "";
    int MaKhachHang_so = 0;
    String MaPhieuNhap_chu = "";
    int MaPhieuNhap_so = 0;
    String Mactpn_chu = "";
    int Mactpn_so = 0;
    String MaPhieuXuat_chu = "";
    int MaPhieuXuat_so = 0;
    String Mactpx_chu = "";
    int Mactpx_so = 0;

    public formChinh() {
        initComponents();

        setResizable(false);
        setLocationRelativeTo(null);

        //Đẩy mã sản phẩm vào textbox
        String getmasanpham = "select masanpham_chu, masanpham_so from Ma";
        ResultSet rssmasp = cn.ExcuteQueryGetTable(getmasanpham);
        try {
            while (rssmasp.next()) {
                MaSanPham_chu = rssmasp.getString("masanpham_chu");
                MaSanPham_so = rssmasp.getInt("masanpham_so");
            }
        } catch (SQLException ex) {
            Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
        MaSanPham_txt.setText(MaSanPham_chu + MaSanPham_so);

        //ducanh
        //Không cho kéo cột của bảng đi lung tung
        LoaiSanPham_tbl.getTableHeader().setReorderingAllowed(false);
        SanPhamTheoLoai_tbl.getTableHeader().setReorderingAllowed(false);
        SanPhamTable_load();
        try {
            LoaiSanPham_cmb_addItems();
        } catch (SQLException ex) {
            Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
        XoaSanPham_btn.setEnabled(false);
        SuaSanPham_btn.setEnabled(false);

        //ducanh
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Menu_pane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        SanPham_pane = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        GiaBan_txt = new javax.swing.JTextField();
        LoaiSanPham_cmb = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        TenSanPham_txt = new javax.swing.JTextField();
        GiaNhap_txt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        SuaSanPham_btn = new javax.swing.JButton();
        XoaSanPham_btn = new javax.swing.JButton();
        ResetSanPham_btn = new javax.swing.JButton();
        ThemSanPham_btn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        MaSanPham_txt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        HangSanXuat_txt = new javax.swing.JTextPane();
        jLabel62 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        DonVi_txt = new javax.swing.JTextPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        SearchSanPham_txt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        SearchTypeSanPham_cmb = new javax.swing.JComboBox<>();
        SearchSanPham_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        SanPham_tbl = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        LoaiSanPham_tbl = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        SanPhamTheoLoai_tbl = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        MaLoaiSanPham_txt = new javax.swing.JTextField();
        TenLoaiSanPham_txt = new javax.swing.JTextField();
        ThemLoaiSanPham_btn = new javax.swing.JButton();
        SuaLoaiSanPham_btn = new javax.swing.JButton();
        ResetLoaiSanPham_btn = new javax.swing.JButton();
        XoaLoaiSanPham_btn = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        NhanVien_pane = new javax.swing.JTabbedPane();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        NhanVien_tbl = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        MaNhanVien_txt = new javax.swing.JTextField();
        TenNhanVien_txt = new javax.swing.JTextField();
        ChucVu_cmb = new javax.swing.JComboBox<>();
        ThemNhanVien_btn = new javax.swing.JButton();
        SuaNhanVien_btn = new javax.swing.JButton();
        XoaNhanVien_btn = new javax.swing.JButton();
        ResetNhanVien_btn = new javax.swing.JButton();
        GioiTinh_cmb = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        SDTNhanVien_txt = new javax.swing.JTextField();
        CCCDNhanVien_txt = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        NgaySinhNhanVien_txt = new javax.swing.JTextPane();
        jLabel63 = new javax.swing.JLabel();
        DiaChiNhanVien_txt = new javax.swing.JTextField();
        SDTType_cmb = new javax.swing.JComboBox<>();
        jPanel18 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        SearchNhanVien_txt = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        SearchTypeNhanVien_cmb = new javax.swing.JComboBox<>();
        SearchNhanVien_btn = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        TaiKhoan_tbl = new javax.swing.JTable();
        jPanel21 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        MaNhanVienTK_txt = new javax.swing.JTextField();
        TenDangNhap_txt = new javax.swing.JTextField();
        MatKhau_txt = new javax.swing.JTextField();
        ChucVuTK_cmb = new javax.swing.JComboBox<>();
        ThemTaiKhoan_btn = new javax.swing.JButton();
        SuaTaiKhoan_btn = new javax.swing.JButton();
        XoaTaiKhoan_btn = new javax.swing.JButton();
        ResetTaiKhoan_btn = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        NhanVienTheoChucVu_tbl = new javax.swing.JTable();
        jLabel38 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        MaChucVu_txt = new javax.swing.JTextField();
        TenChucVu_txt = new javax.swing.JTextField();
        ThemChucVu_btn = new javax.swing.JButton();
        SuaChucVu_btn = new javax.swing.JButton();
        XoaChucVu_btn = new javax.swing.JButton();
        ResetChucVu_btn = new javax.swing.JButton();
        jLabel39 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        ChucVu_tbl = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        KhachHang_tbl = new javax.swing.JTable();
        jPanel24 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        MaKhachHang = new javax.swing.JTextField();
        TenKhachHang = new javax.swing.JTextField();
        DiaChiKhachHang = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jComboBox14 = new javax.swing.JComboBox<>();
        EmailKhachHang = new javax.swing.JTextField();
        SDTKhachHang = new javax.swing.JTextField();
        LoaiKhachHang_cmb = new javax.swing.JComboBox<>();
        ThemKhachHang_btn = new javax.swing.JButton();
        SuaKhachHang_btn = new javax.swing.JButton();
        XoaKhachHang_btn = new javax.swing.JButton();
        Reset = new javax.swing.JButton();
        jLabel48 = new javax.swing.JLabel();
        Search_txt = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        SDT_cmb = new javax.swing.JComboBox<>();
        Search_cmb = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        PhieuNhap_tbl = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        MaPhieuNhap_txt = new javax.swing.JTextField();
        NhanVien_cmb = new javax.swing.JComboBox<>();
        ThemPhieuNhap_btn = new javax.swing.JButton();
        SuaPhieuNhap_btn = new javax.swing.JButton();
        ResetPhieuNhap_btn = new javax.swing.JButton();
        jScrollPane17 = new javax.swing.JScrollPane();
        NgayNhap_txt = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        ChiTietPhieuNhap_tbl = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        MaCTPN_txt = new javax.swing.JTextField();
        SanPhamCTPN_cmb = new javax.swing.JComboBox<>();
        SoLuongCTPN_txt = new javax.swing.JTextField();
        ThemCTPN_btn = new javax.swing.JButton();
        SuaCTPN_btn = new javax.swing.JButton();
        XoaCTPN_btn = new javax.swing.JButton();
        ResetCTPN_btn = new javax.swing.JButton();
        MaPhieuNhap_cmb = new javax.swing.JComboBox<>();
        jScrollPane18 = new javax.swing.JScrollPane();
        DonViNhapCTPN_txt = new javax.swing.JTextPane();
        jLabel17 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        PhieuXuatKho_tbl = new javax.swing.JTable();
        jLabel50 = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        MaPhieuXuat = new javax.swing.JTextField();
        NgayLap = new javax.swing.JTextField();
        Thempxk_btn = new javax.swing.JButton();
        SuaPXK_btn = new javax.swing.JButton();
        Resetpxk_btn = new javax.swing.JButton();
        TenNV_cmb = new javax.swing.JComboBox<>();
        TenKH_cmb = new javax.swing.JComboBox<>();
        jScrollPane12 = new javax.swing.JScrollPane();
        ChiTiet_tb = new javax.swing.JTable();
        jPanel26 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        MaCTPX = new javax.swing.JTextField();
        SoLuong = new javax.swing.JTextField();
        Themctpx_btn = new javax.swing.JButton();
        Suactpx_btn = new javax.swing.JButton();
        Xoactpx_btn = new javax.swing.JButton();
        Resetctpx_btn = new javax.swing.JButton();
        SanPham_cmb = new javax.swing.JComboBox<>();
        MaPX_cmb = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane19 = new javax.swing.JScrollPane();
        DonViXuatCTPX_txt = new javax.swing.JTextPane();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        ThongKe_tbl = new javax.swing.JTable();
        jPanel17 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        DangXuatPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Phần mềm quản lý kho");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        Menu_pane.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        Menu_pane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu_paneMouseClicked(evt);
            }
        });
        Menu_pane.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                Menu_paneComponentShown(evt);
            }
        });

        SanPham_pane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SanPham_paneMouseClicked(evt);
            }
        });

        GiaBan_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GiaBan_txtActionPerformed(evt);
            }
        });

        LoaiSanPham_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        LoaiSanPham_cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoaiSanPham_cmbActionPerformed(evt);
            }
        });

        jLabel6.setText("Hãng sản xuất");

        TenSanPham_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TenSanPham_txtActionPerformed(evt);
            }
        });

        GiaNhap_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GiaNhap_txtActionPerformed(evt);
            }
        });

        jLabel3.setText("Loại sản phẩm");

        jLabel4.setText("Giá nhập");

        jLabel5.setText("Giá bán");

        SuaSanPham_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/fix.png"))); // NOI18N
        SuaSanPham_btn.setText("Sửa");
        SuaSanPham_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuaSanPham_btnActionPerformed(evt);
            }
        });

        XoaSanPham_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        XoaSanPham_btn.setText("Xóa");
        XoaSanPham_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaSanPham_btnActionPerformed(evt);
            }
        });

        ResetSanPham_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reset.png"))); // NOI18N
        ResetSanPham_btn.setText("Reset");
        ResetSanPham_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetSanPham_btnActionPerformed(evt);
            }
        });

        ThemSanPham_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
        ThemSanPham_btn.setText("Thêm ");
        ThemSanPham_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemSanPham_btnActionPerformed(evt);
            }
        });

        jLabel2.setText("Tên sản phẩm");

        MaSanPham_txt.setEnabled(false);

        jLabel1.setText("Mã sản phẩm");

        jScrollPane14.setViewportView(HangSanXuat_txt);

        jLabel62.setText("Đơn vị tính");

        jScrollPane15.setViewportView(DonVi_txt);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(49, 49, 49))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)
                                .addComponent(ResetSanPham_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(GiaBan_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GiaNhap_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LoaiSanPham_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TenSanPham_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MaSanPham_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ThemSanPham_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(XoaSanPham_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SuaSanPham_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ThemSanPham_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MaSanPham_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(SuaSanPham_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(XoaSanPham_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(ResetSanPham_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(TenSanPham_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LoaiSanPham_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(GiaNhap_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(GiaBan_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))))
        );

        jLabel9.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel9.setText("Tìm kiếm");

        jLabel7.setText("Tìm kiếm theo:");

        SearchTypeSanPham_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Loại tìm kiếm", "Mã sản phẩm", "Tên sản phẩm", "Hãng sản xuất" }));

        SearchSanPham_btn.setText("Tìm kiếm");
        SearchSanPham_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchSanPham_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SearchTypeSanPham_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(SearchSanPham_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(SearchSanPham_btn)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(SearchSanPham_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchTypeSanPham_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SearchSanPham_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        SanPham_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã sản phẩm", "Tên sản phẩm", "Loại sản phẩm", "Hãng sản xuất", "Đơn vị tính", "Giá nhập", "Giá bán", "Tồn kho"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SanPham_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SanPham_tblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(SanPham_tbl);
        if (SanPham_tbl.getColumnModel().getColumnCount() > 0) {
            SanPham_tbl.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SanPham_pane.addTab("Sản phẩm", jPanel3);

        LoaiSanPham_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "STT", "Mã loại", "Tên loại"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        LoaiSanPham_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoaiSanPham_tblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(LoaiSanPham_tbl);
        if (LoaiSanPham_tbl.getColumnModel().getColumnCount() > 0) {
            LoaiSanPham_tbl.getColumnModel().getColumn(0).setResizable(false);
            LoaiSanPham_tbl.getColumnModel().getColumn(1).setResizable(false);
            LoaiSanPham_tbl.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel8.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel8.setText("Loại sản phẩm");

        jLabel10.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel10.setText("Sản phẩm");

        SanPhamTheoLoai_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STT", "Mã sản phẩm", "Tên sản phẩm", "Loại sản phẩm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SanPhamTheoLoai_tbl.setEnabled(false);
        jScrollPane3.setViewportView(SanPhamTheoLoai_tbl);
        if (SanPhamTheoLoai_tbl.getColumnModel().getColumnCount() > 0) {
            SanPhamTheoLoai_tbl.getColumnModel().getColumn(0).setResizable(false);
            SanPhamTheoLoai_tbl.getColumnModel().getColumn(1).setResizable(false);
            SanPhamTheoLoai_tbl.getColumnModel().getColumn(2).setResizable(false);
            SanPhamTheoLoai_tbl.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel11.setText("Mã loại sản phẩm");

        jLabel12.setText("Tên loại sản phẩm");

        MaLoaiSanPham_txt.setEnabled(false);

        ThemLoaiSanPham_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
        ThemLoaiSanPham_btn.setText("Thêm");
        ThemLoaiSanPham_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemLoaiSanPham_btnActionPerformed(evt);
            }
        });

        SuaLoaiSanPham_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/fix.png"))); // NOI18N
        SuaLoaiSanPham_btn.setText("Sửa");
        SuaLoaiSanPham_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuaLoaiSanPham_btnActionPerformed(evt);
            }
        });

        ResetLoaiSanPham_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reset.png"))); // NOI18N
        ResetLoaiSanPham_btn.setText("Reset");
        ResetLoaiSanPham_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetLoaiSanPham_btnActionPerformed(evt);
            }
        });

        XoaLoaiSanPham_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        XoaLoaiSanPham_btn.setText("Xóa");
        XoaLoaiSanPham_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaLoaiSanPham_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(ThemLoaiSanPham_btn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SuaLoaiSanPham_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(XoaLoaiSanPham_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                                .addComponent(ResetLoaiSanPham_btn)))
                        .addGap(46, 46, 46))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TenLoaiSanPham_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(MaLoaiSanPham_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(MaLoaiSanPham_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(TenLoaiSanPham_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ThemLoaiSanPham_btn)
                    .addComponent(SuaLoaiSanPham_btn)
                    .addComponent(ResetLoaiSanPham_btn)
                    .addComponent(XoaLoaiSanPham_btn))
                .addContainerGap(102, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(223, 223, 223)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        SanPham_pane.addTab("Loại sản phẩm", jPanel6);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(SanPham_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 1007, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SanPham_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Menu_pane.addTab("Sản phẩm", new javax.swing.ImageIcon(getClass().getResource("/icon/SanPham.png")), jPanel2); // NOI18N

        jPanel11.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jPanel11ComponentHidden(evt);
            }
        });

        NhanVien_pane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NhanVien_paneMouseClicked(evt);
            }
        });

        NhanVien_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã nhân viên", "Tên nhân viên", "Ngày sinh", "Giới tính", "Chức vụ", "Địa chỉ", "SĐT", "CCCD"
            }
        ));
        NhanVien_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NhanVien_tblMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(NhanVien_tbl);

        jLabel25.setText("Mã nhân viên");

        jLabel26.setText("Tên nhân viên");

        jLabel27.setText("Ngày sinh");

        jLabel28.setText("Giới tính");

        jLabel29.setText("Chức vụ");

        MaNhanVien_txt.setEnabled(false);

        TenNhanVien_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TenNhanVien_txtActionPerformed(evt);
            }
        });

        ChucVu_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ThemNhanVien_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
        ThemNhanVien_btn.setText("Thêm");
        ThemNhanVien_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemNhanVien_btnActionPerformed(evt);
            }
        });

        SuaNhanVien_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/fix.png"))); // NOI18N
        SuaNhanVien_btn.setText("Sửa");
        SuaNhanVien_btn.setToolTipText("");
        SuaNhanVien_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuaNhanVien_btnActionPerformed(evt);
            }
        });

        XoaNhanVien_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        XoaNhanVien_btn.setText("Xóa");
        XoaNhanVien_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaNhanVien_btnActionPerformed(evt);
            }
        });

        ResetNhanVien_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reset.png"))); // NOI18N
        ResetNhanVien_btn.setText("Reset");
        ResetNhanVien_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetNhanVien_btnActionPerformed(evt);
            }
        });

        GioiTinh_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));

        jLabel30.setText("Số điện thoại");

        CCCDNhanVien_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CCCDNhanVien_txtActionPerformed(evt);
            }
        });

        jLabel31.setText("Số CCCD");

        jScrollPane16.setViewportView(NgaySinhNhanVien_txt);

        jLabel63.setText("Địa chỉ");

        SDTType_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "+84 (VN)", "+44 (UK)", "+49 (GER)", "+82 (KOR)", "+86 (CN)" }));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel12Layout.createSequentialGroup()
                                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(24, 24, 24)
                                    .addComponent(GioiTinh_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ChucVu_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel12Layout.createSequentialGroup()
                                        .addComponent(jLabel25)
                                        .addGap(24, 24, 24)
                                        .addComponent(MaNhanVien_txt, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))
                                    .addGroup(jPanel12Layout.createSequentialGroup()
                                        .addComponent(jLabel26)
                                        .addGap(21, 21, 21)
                                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jScrollPane16)
                                            .addComponent(TenNhanVien_txt, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)))))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addComponent(SDTType_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(DiaChiNhanVien_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(114, 114, 114)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ResetNhanVien_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(XoaNhanVien_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ThemNhanVien_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SuaNhanVien_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(31, Short.MAX_VALUE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(SDTNhanVien_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(CCCDNhanVien_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(MaNhanVien_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(TenNhanVien_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel27)
                            .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(GioiTinh_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29)
                            .addComponent(ChucVu_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(ThemNhanVien_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SuaNhanVien_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(XoaNhanVien_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)))
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ResetNhanVien_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(DiaChiNhanVien_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel63)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SDTNhanVien_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30)
                    .addComponent(SDTType_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(CCCDNhanVien_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );

        jLabel18.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel18.setText("Tìm kiếm");

        jLabel24.setText("Tìm kiếm theo:");

        SearchTypeNhanVien_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Loại tìm kiếm", "Mã nhân viên", "Tên nhân viên", "Địa chỉ" }));
        SearchTypeNhanVien_cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchTypeNhanVien_cmbActionPerformed(evt);
            }
        });

        SearchNhanVien_btn.setText("Tìm kiếm");
        SearchNhanVien_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchNhanVien_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SearchTypeNhanVien_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(SearchNhanVien_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(SearchNhanVien_btn)))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addComponent(SearchNhanVien_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(SearchTypeNhanVien_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SearchNhanVien_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1008, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        NhanVien_pane.addTab("Nhân viên", jPanel19);

        TaiKhoan_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã nhân viên", "Tên đăng nhập", "Mật khẩu", "Quyền"
            }
        ));
        TaiKhoan_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TaiKhoan_tblMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(TaiKhoan_tbl);

        jLabel34.setText("Mã nhân viên");

        jLabel35.setText("Tên đăng nhập");

        jLabel36.setText("Mật khẩu");

        jLabel37.setText("Quyền");

        ChucVuTK_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ThemTaiKhoan_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
        ThemTaiKhoan_btn.setText("Thêm");
        ThemTaiKhoan_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemTaiKhoan_btnActionPerformed(evt);
            }
        });

        SuaTaiKhoan_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/fix.png"))); // NOI18N
        SuaTaiKhoan_btn.setText("Sửa");
        SuaTaiKhoan_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuaTaiKhoan_btnActionPerformed(evt);
            }
        });

        XoaTaiKhoan_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        XoaTaiKhoan_btn.setText("Xóa");
        XoaTaiKhoan_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaTaiKhoan_btnActionPerformed(evt);
            }
        });

        ResetTaiKhoan_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reset.png"))); // NOI18N
        ResetTaiKhoan_btn.setText("Reset");
        ResetTaiKhoan_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetTaiKhoan_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel34)
                            .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MaNhanVienTK_txt)
                            .addComponent(TenDangNhap_txt)
                            .addComponent(MatKhau_txt)
                            .addComponent(ChucVuTK_cmb, 0, 176, Short.MAX_VALUE)))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addComponent(XoaTaiKhoan_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                                .addComponent(ResetTaiKhoan_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addComponent(ThemTaiKhoan_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SuaTaiKhoan_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(TenDangNhap_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(MatKhau_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(MaNhanVienTK_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(ChucVuTK_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ThemTaiKhoan_btn)
                    .addComponent(SuaTaiKhoan_btn))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(XoaTaiKhoan_btn)
                    .addComponent(ResetTaiKhoan_btn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 138, Short.MAX_VALUE))
        );

        NhanVien_pane.addTab("Tài khoản", jPanel20);

        NhanVienTheoChucVu_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STT", "Mã nhân viên", "Tên nhân viên", "Chức vụ"
            }
        ));
        NhanVienTheoChucVu_tbl.setEnabled(false);
        jScrollPane8.setViewportView(NhanVienTheoChucVu_tbl);

        jLabel38.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel38.setText("Chức vụ");

        jLabel40.setText("Mã chức vụ");

        jLabel41.setText("Tên chức vụ");

        ThemChucVu_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
        ThemChucVu_btn.setText("Thêm");
        ThemChucVu_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemChucVu_btnActionPerformed(evt);
            }
        });

        SuaChucVu_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/fix.png"))); // NOI18N
        SuaChucVu_btn.setText("Sửa");
        SuaChucVu_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuaChucVu_btnActionPerformed(evt);
            }
        });

        XoaChucVu_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        XoaChucVu_btn.setText("Xóa");
        XoaChucVu_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaChucVu_btnActionPerformed(evt);
            }
        });

        ResetChucVu_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reset.png"))); // NOI18N
        ResetChucVu_btn.setText("Reset");
        ResetChucVu_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetChucVu_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel41))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MaChucVu_txt, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(TenChucVu_txt)))
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addComponent(XoaChucVu_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                                .addComponent(ResetChucVu_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addComponent(ThemChucVu_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SuaChucVu_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(MaChucVu_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(TenChucVu_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ThemChucVu_btn)
                    .addComponent(SuaChucVu_btn))
                .addGap(27, 27, 27)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(XoaChucVu_btn)
                    .addComponent(ResetChucVu_btn))
                .addContainerGap(124, Short.MAX_VALUE))
        );

        jLabel39.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel39.setText("Nhân viên");

        ChucVu_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "STT", "Mã chức vụ", "Tên chức vụ"
            }
        ));
        ChucVu_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChucVu_tblMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(ChucVu_tbl);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(236, 236, 236)
                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel38)
                .addGap(4, 4, 4)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        NhanVien_pane.addTab("Chức vụ", jPanel22);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(NhanVien_pane, javax.swing.GroupLayout.DEFAULT_SIZE, 1009, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NhanVien_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Menu_pane.addTab("Nhân viên", new javax.swing.ImageIcon(getClass().getResource("/icon/NhanVien.png")), jPanel11); // NOI18N

        KhachHang_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã khách hàng", "Tên khách hàng", "Địa chỉ", "SĐT", "Email", "Loại khách hàng"
            }
        ));
        KhachHang_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KhachHang_tblMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(KhachHang_tbl);

        jLabel42.setText("Mã khách hàng");

        jLabel43.setText("Tên khách hàng");

        jLabel44.setText("Địa chỉ");

        jLabel45.setText("Số điện thoại");

        jLabel46.setText("Loại khách hàng");

        MaKhachHang.setEnabled(false);
        MaKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaKhachHangActionPerformed(evt);
            }
        });

        jLabel47.setText("Email");

        jComboBox14.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox14ActionPerformed(evt);
            }
        });

        SDTKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SDTKhachHangActionPerformed(evt);
            }
        });

        LoaiKhachHang_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Loại khách hàng", "loyal", "returning", "potential" }));
        LoaiKhachHang_cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoaiKhachHang_cmbActionPerformed(evt);
            }
        });

        ThemKhachHang_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
        ThemKhachHang_btn.setText("Thêm");
        ThemKhachHang_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemKhachHang_btnActionPerformed(evt);
            }
        });

        SuaKhachHang_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/fix.png"))); // NOI18N
        SuaKhachHang_btn.setText("Sửa");
        SuaKhachHang_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuaKhachHang_btnActionPerformed(evt);
            }
        });

        XoaKhachHang_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        XoaKhachHang_btn.setText("Xóa");
        XoaKhachHang_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaKhachHang_btnActionPerformed(evt);
            }
        });

        Reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reset.png"))); // NOI18N
        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        jLabel48.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel48.setText("Tìm kiếm");

        Search.setText("Tìm kiếm");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        SDT_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "+84 (VN)", "+44 (UK)", "+49 (GER)", "+82 (KOR)", "+86 (CN)" }));

        Search_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]  {"Loại tìm kiếm", "Mã khách hàng", "Tên khách hàng", "SDT"}));

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MaKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel43)
                            .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TenKhachHang)
                            .addComponent(DiaChiKhachHang))))
                .addGap(28, 28, 28)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(SDT_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SDTKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addComponent(jLabel46)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox14, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LoaiKhachHang_cmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EmailKhachHang))))
                .addGap(18, 18, 18)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                        .addComponent(ThemKhachHang_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103))
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(XoaKhachHang_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SuaKhachHang_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Search_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Search_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29))))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel42)
                            .addComponent(jLabel45)
                            .addComponent(MaKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel48)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ThemKhachHang_btn, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(SDTKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SDT_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel47)
                            .addComponent(EmailKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jComboBox14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LoaiKhachHang_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel46)))
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel43)
                            .addComponent(TenKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel44)
                            .addComponent(DiaChiKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Search_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SuaKhachHang_btn))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(XoaKhachHang_btn)
                            .addComponent(Search_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Search)
                            .addComponent(Reset))))
                .addContainerGap(106, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane10)
                    .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        Menu_pane.addTab("Khách hàng", new javax.swing.ImageIcon(getClass().getResource("/icon/KhachHang.png")), jPanel14); // NOI18N

        jLabel13.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel13.setText("Phiếu nhập");

        PhieuNhap_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã phiếu nhập", "Nhân viên", "Tổng tiền", "Ngày nhập"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PhieuNhap_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PhieuNhap_tblMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(PhieuNhap_tbl);
        if (PhieuNhap_tbl.getColumnModel().getColumnCount() > 0) {
            PhieuNhap_tbl.getColumnModel().getColumn(0).setResizable(false);
            PhieuNhap_tbl.getColumnModel().getColumn(1).setResizable(false);
            PhieuNhap_tbl.getColumnModel().getColumn(2).setResizable(false);
            PhieuNhap_tbl.getColumnModel().getColumn(3).setResizable(false);
            PhieuNhap_tbl.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel14.setText("Mã phiếu nhập");

        jLabel15.setText("Nhân viên");

        jLabel16.setText("Ngày nhập");

        MaPhieuNhap_txt.setEnabled(false);

        NhanVien_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ThemPhieuNhap_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
        ThemPhieuNhap_btn.setText("Thêm");
        ThemPhieuNhap_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemPhieuNhap_btnActionPerformed(evt);
            }
        });

        SuaPhieuNhap_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/fix.png"))); // NOI18N
        SuaPhieuNhap_btn.setText("Sửa");
        SuaPhieuNhap_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuaPhieuNhap_btnActionPerformed(evt);
            }
        });

        ResetPhieuNhap_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reset.png"))); // NOI18N
        ResetPhieuNhap_btn.setText("Reset");
        ResetPhieuNhap_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetPhieuNhap_btnActionPerformed(evt);
            }
        });

        NgayNhap_txt.setEnabled(false);
        jScrollPane17.setViewportView(NgayNhap_txt);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(MaPhieuNhap_txt))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NhanVien_cmb, 0, 243, Short.MAX_VALUE)
                                    .addComponent(jScrollPane17)))))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ThemPhieuNhap_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(SuaPhieuNhap_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(ResetPhieuNhap_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(MaPhieuNhap_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NhanVien_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(34, 34, 34)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ThemPhieuNhap_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(SuaPhieuNhap_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ResetPhieuNhap_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );

        ChiTietPhieuNhap_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã CTPN", "Mã phiếu nhập", "Sản phẩm", "Số lượng", "Đơn vị tính", "Thành tiền"
            }
        ));
        ChiTietPhieuNhap_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChiTietPhieuNhap_tblMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(ChiTietPhieuNhap_tbl);

        jLabel19.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel19.setText("Chi tiết phiếu nhập");

        jLabel20.setText("Mã CTPN");

        jLabel21.setText("Mã phiếu nhập");

        jLabel22.setText("Sản phẩm");

        jLabel23.setText("Số lượng nhập");

        MaCTPN_txt.setEnabled(false);

        SanPhamCTPN_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        SanPhamCTPN_cmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SanPhamCTPN_cmbItemStateChanged(evt);
            }
        });
        SanPhamCTPN_cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SanPhamCTPN_cmbActionPerformed(evt);
            }
        });

        SoLuongCTPN_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SoLuongCTPN_txtActionPerformed(evt);
            }
        });

        ThemCTPN_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
        ThemCTPN_btn.setText("Thêm");
        ThemCTPN_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemCTPN_btnActionPerformed(evt);
            }
        });

        SuaCTPN_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/fix.png"))); // NOI18N
        SuaCTPN_btn.setText("Sửa");
        SuaCTPN_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuaCTPN_btnActionPerformed(evt);
            }
        });

        XoaCTPN_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        XoaCTPN_btn.setText("Xóa");
        XoaCTPN_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaCTPN_btnActionPerformed(evt);
            }
        });

        ResetCTPN_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reset.png"))); // NOI18N
        ResetCTPN_btn.setText("Reset");
        ResetCTPN_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetCTPN_btnActionPerformed(evt);
            }
        });

        MaPhieuNhap_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        DonViNhapCTPN_txt.setEnabled(false);
        jScrollPane18.setViewportView(DonViNhapCTPN_txt);

        jLabel17.setText("Đơn vị nhập");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SoLuongCTPN_txt))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MaCTPN_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MaPhieuNhap_cmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SanPhamCTPN_cmb, 0, 265, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ThemCTPN_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(SuaCTPN_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(XoaCTPN_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(ResetCTPN_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jScrollPane18)))))
                .addGap(0, 40, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(MaCTPN_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(MaPhieuNhap_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(SanPhamCTPN_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(SoLuongCTPN_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ThemCTPN_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SuaCTPN_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(XoaCTPN_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ResetCTPN_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel19))
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        Menu_pane.addTab("Nhập kho", new javax.swing.ImageIcon(getClass().getResource("/icon/NhapKho.png")), jPanel8); // NOI18N

        jLabel49.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel49.setText("Phiếu xuất kho");

        PhieuXuatKho_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã phiếu xuất", "Khách hàng", "Nhân viên", "Ngày lập phiếu", "Tổng tiền"
            }
        ));
        PhieuXuatKho_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PhieuXuatKho_tblMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(PhieuXuatKho_tbl);

        jLabel50.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel50.setText("Chi tiết phiếu xuất kho");

        jLabel51.setText("Mã phiếu xuất");

        jLabel52.setText("Tên khách hàng");

        jLabel53.setText("Tên nhân viên");

        jLabel54.setText("Ngày lập phiếu");

        NgayLap.setEnabled(false);
        NgayLap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NgayLapActionPerformed(evt);
            }
        });

        Thempxk_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
        Thempxk_btn.setText("Thêm");
        Thempxk_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Thempxk_btnActionPerformed(evt);
            }
        });

        SuaPXK_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/fix.png"))); // NOI18N
        SuaPXK_btn.setText("Sửa");
        SuaPXK_btn.setEnabled(false);
        SuaPXK_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuaPXK_btnActionPerformed(evt);
            }
        });

        Resetpxk_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reset.png"))); // NOI18N
        Resetpxk_btn.setText("Reset");
        Resetpxk_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Resetpxk_btnActionPerformed(evt);
            }
        });

        TenNV_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        TenNV_cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TenNV_cmbActionPerformed(evt);
            }
        });

        TenKH_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        TenKH_cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TenKH_cmbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(Thempxk_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel25Layout.createSequentialGroup()
                            .addGap(32, 32, 32)
                            .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel54, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel52, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel53, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MaPhieuXuat, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                            .addComponent(NgayLap)
                            .addComponent(TenNV_cmb, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TenKH_cmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(SuaPXK_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(Resetpxk_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MaPhieuXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52)
                    .addComponent(TenKH_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TenNV_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(NgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Thempxk_btn)
                    .addComponent(SuaPXK_btn)
                    .addComponent(Resetpxk_btn))
                .addGap(27, 27, 27))
        );

        ChiTiet_tb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã CTPX", "Mã phiếu xuất", "Sản phẩm", "Số lượng", "Đơn vị tính", "Thành tiền"
            }
        ));
        ChiTiet_tb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChiTiet_tbMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(ChiTiet_tb);

        jLabel56.setText("Mã CTPX");

        jLabel57.setText("Mã phiếu xuất");

        jLabel58.setText("Sản phẩm");

        jLabel59.setText("Số lượng");

        MaCTPX.setEnabled(false);

        SoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SoLuongActionPerformed(evt);
            }
        });

        Themctpx_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
        Themctpx_btn.setText("Thêm");
        Themctpx_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Themctpx_btnActionPerformed(evt);
            }
        });

        Suactpx_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/fix.png"))); // NOI18N
        Suactpx_btn.setText("Sửa");
        Suactpx_btn.setEnabled(false);
        Suactpx_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Suactpx_btnActionPerformed(evt);
            }
        });

        Xoactpx_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        Xoactpx_btn.setText("Xóa");
        Xoactpx_btn.setEnabled(false);
        Xoactpx_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Xoactpx_btnActionPerformed(evt);
            }
        });

        Resetctpx_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reset.png"))); // NOI18N
        Resetctpx_btn.setText("Reset");
        Resetctpx_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Resetctpx_btnActionPerformed(evt);
            }
        });

        SanPham_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        SanPham_cmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SanPham_cmbItemStateChanged(evt);
            }
        });

        MaPX_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        MaPX_cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaPX_cmbActionPerformed(evt);
            }
        });

        jLabel32.setText("Đơn vị xuất");

        DonViXuatCTPX_txt.setEnabled(false);
        jScrollPane19.setViewportView(DonViXuatCTPX_txt);

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(Themctpx_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(Suactpx_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Xoactpx_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addComponent(Resetctpx_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel26Layout.createSequentialGroup()
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(25, 25, 25)
                            .addComponent(jScrollPane19))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel26Layout.createSequentialGroup()
                            .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel56, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel57, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                .addComponent(jLabel58, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(MaCTPX)
                                .addComponent(SanPham_cmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(MaPX_cmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel56)
                    .addComponent(MaCTPX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel57)
                    .addComponent(MaPX_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel58)
                    .addComponent(SanPham_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel59)
                    .addComponent(SoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addGap(18, 18, 18)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Themctpx_btn)
                    .addComponent(Suactpx_btn)
                    .addComponent(Xoactpx_btn)
                    .addComponent(Resetctpx_btn))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(jLabel49))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jLabel50))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(17, 17, 17))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jLabel49)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE))
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel50)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        Menu_pane.addTab("Xuất kho", new javax.swing.ImageIcon(getClass().getResource("/icon/XuatKho.png")), jPanel15); // NOI18N

        ThongKe_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STT", "Mã sản phẩm", "Tên sản phẩm", "Tồn kho"
            }
        ));
        jScrollPane13.setViewportView(ThongKe_tbl);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 1009, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Menu_pane.addTab("Thống kê", new javax.swing.ImageIcon(getClass().getResource("/icon/ThongKe.png")), jPanel16); // NOI18N

        jLabel61.setText("Đang demo");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel61)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Menu_pane.addTab("Hướng dẫn", new javax.swing.ImageIcon(getClass().getResource("/icon/HuongDan.png")), jPanel17); // NOI18N

        DangXuatPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                DangXuatPanelComponentShown(evt);
            }
        });

        javax.swing.GroupLayout DangXuatPanelLayout = new javax.swing.GroupLayout(DangXuatPanel);
        DangXuatPanel.setLayout(DangXuatPanelLayout);
        DangXuatPanelLayout.setHorizontalGroup(
            DangXuatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        DangXuatPanelLayout.setVerticalGroup(
            DangXuatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        Menu_pane.addTab("Đăng xuất", new javax.swing.ImageIcon(getClass().getResource("/icon/signOut.png")), DangXuatPanel); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Menu_pane, javax.swing.GroupLayout.DEFAULT_SIZE, 1142, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 7, Short.MAX_VALUE)
                .addComponent(Menu_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Menu_pane.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Load bảng sản phầm
    final String header[] = {"STT", "Mã sản phẩm", "Tên sản phẩm", "Loại sản phẩm", "Hãng sản xuất", "Đơn vị tính", "Giá nhập", "Giá bán"};
    final DefaultTableModel tb = new DefaultTableModel(header, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    public void SanPhamTable_load() {
        SanPham_tbl.getTableHeader().setReorderingAllowed(false);

        try {
            LoaiSanPham_cmb_addItems();
        } catch (SQLException ex) {
            Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            int number;
            Vector row = null;
            String sql = "select * from SanPham";
            ResultSet rs = cn.ExcuteQueryGetTable(sql);
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            tb.setRowCount(0);
            int index = 1;
            while (rs.next()) {
                row = new Vector();
                row.add(index);
                index++;
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }

                tb.addRow(row);
                SanPham_tbl.setModel(tb);

            }
            rs.close();

        } catch (Exception e) {

        }
    }

    //Đẩy dữ liệu từ db vào combobox loại sản phẩm 
    public void LoaiSanPham_cmb_addItems() throws SQLException {
        String sql = "SELECT TenLoaiSanPham FROM LoaiSanPham";
        ResultSet rs = cn.ExcuteQueryGetTable(sql);
        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
        while (rs.next()) {
            String value = rs.getString("TenLoaiSanPham");
            comboBoxModel.addElement(value);
        }
        LoaiSanPham_cmb.setModel(comboBoxModel);
        rs.close();
    }

    //Đẩy dữ liệu từ db vào combobox sản phẩm 
    public void SanPham_cmb_addItems() throws SQLException {
        String sql = "SELECT TenSanPham FROM SanPham";
        ResultSet rs = cn.ExcuteQueryGetTable(sql);
        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
        while (rs.next()) {
            String value = rs.getString("TenSanPham");
            comboBoxModel.addElement(value);
        }
        SanPham_cmb.setModel(comboBoxModel);
        rs.close();
    }
    //Dat

    final String KhachHangTable[] = {"STT", "Mã Khách Hàng", "Tên Khách Hàng", "Địa Chỉ", "SĐT", "Email", "Loại Khách Hàng"};
    final DefaultTableModel tbkh = new DefaultTableModel(KhachHangTable, 0);

    public void KhachHangTable_load() {
        KhachHang_tbl.getTableHeader().setReorderingAllowed(false);
        KhachHang_tbl.setDefaultEditor(Object.class, null);

        //Đẩy mã khách hàng vào textbox
        String getmakh = "select makhachhang_chu, makhachhang_so from Ma";
        ResultSet rssmakh = cn.ExcuteQueryGetTable(getmakh);
        try {
            while (rssmakh.next()) {
                MaKhachHang_chu = rssmakh.getString("makhachhang_chu");
                MaKhachHang_so = rssmakh.getInt("makhachhang_so");
            }
        } catch (SQLException ex) {
            Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
        MaKhachHang.setText(MaKhachHang_chu + MaKhachHang_so);

        try {
            int number;
            Vector row = null;
            String sql = "select * from KhachHang";
            ResultSet rs = cn.ExcuteQueryGetTable(sql);
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            tbkh.setRowCount(0);
            int index = 1;
            while (rs.next()) {
                row = new Vector();
                row.add(index);
                index++;
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }

                tbkh.addRow(row);
                KhachHang_tbl.setModel(tbkh);

            }
            rs.close();
            try {
                LoaiKhachHang_cmb_addItems();
            } catch (SQLException ex) {
                Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
            }
            XoaKhachHang_btn.setEnabled(false);
            SuaKhachHang_btn.setEnabled(false);

        } catch (Exception e) {

        }
    }

    //Đẩy dữ liệu từ db vào combobox loại khách hàng
    public void LoaiKhachHang_cmb_addItems() throws SQLException {
        String sql = "SELECT LoaiKhachHang FROM KhachHang";
        try (ResultSet rs = cn.ExcuteQueryGetTable(sql)) {
            DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
            while (rs.next()) {
                String value = rs.getString("LoaiKhachHang");
                comboBoxModel.addElement(value);
            }
            LoaiSanPham_cmb.setModel(comboBoxModel);
        }
    }
    // Load PhieuXuatKho
    final String Header[] = {"STT", "Mã Phiếu Xuất", "Khách Hàng", "Nhân Viên", "Ngày Lập Phiếu", "Tổng Tiền"};
    final DefaultTableModel tbpxk = new DefaultTableModel(Header, 0);

    public void PhieuXuatKhoTable_load() {
        PhieuXuatKho_tbl.getTableHeader().setReorderingAllowed(false);
        PhieuXuatKho_tbl.setDefaultEditor(Object.class, null);
        NgayLap.setText(DucAnh.currentDate());

        //Đẩy mã phiếu xuất kho vào textbox
        String getmaphieuxuat = "select maphieuxuat_chu, maphieuxuat_so from Ma";
        ResultSet rssmaphieuxuat = cn.ExcuteQueryGetTable(getmaphieuxuat);
        try {
            while (rssmaphieuxuat.next()) {
                MaPhieuXuat_chu = rssmaphieuxuat.getString("maphieuxuat_chu");
                MaPhieuXuat_so = rssmaphieuxuat.getInt("maphieuxuat_so");
            }
        } catch (SQLException ex) {
            Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
        MaPhieuXuat.setText(MaPhieuXuat_chu + MaPhieuXuat_so);

        try {
            //Tính và đẩy dữ liệu vào cột giá nhập cho chi tiết phiếu xuất
            String sql2 = "UPDATE ChiTietPhieuXuat\n"
                    + "SET ThanhTienXuat = sp.GiaBan * ct.SoLuongXuat\n"
                    + "FROM ChiTietPhieuXuat ct\n"
                    + "JOIN SanPham sp ON ct.TenSanPham = sp.TenSanPham\n"
                    + "JOIN PhieuXuat pn ON ct.MaPhieuXuat = pn.MaPhieuXuat\n"
                    + "WHERE pn.MaPhieuXuat = ct.MaPhieuXuat;";
            if (cn.ExcuteQueryUpdateDB(sql2)) {
                System.out.println("Da tinh het thanh tien cua cac chi tiet phieu xuat");
            }
            //Update tổng tiền từ các CTPN vào bảng Phiếu nhập
            String tongTienCalc = "UPDATE PhieuXuat\n"
                    + "SET TongTienXuat = (\n"
                    + "    SELECT SUM(ThanhTienXuat)\n"
                    + "    FROM ChiTietPhieuXuat\n"
                    + "    WHERE ChiTietPhieuXuat.MaPhieuXuat = PhieuXuat.MaPhieuXuat\n"
                    + ")\n"
                    + "WHERE EXISTS (\n"
                    + "    SELECT 1\n"
                    + "    FROM ChiTietPhieuXuat\n"
                    + "    WHERE ChiTietPhieuXuat.MaPhieuXuat = PhieuXuat.MaPhieuXuat\n"
                    + ")";
            if (cn.ExcuteQueryUpdateDB(tongTienCalc)) {
                System.out.println("Đã tính tổng tiền các phiếu nhập");
            }
            TenKH_cmb_addItems();
            MaPX_cmb_addItems();
            SanPham_cmb_addItems();

            int number;
            Vector row = null;
            String sql = "select * from PhieuXuat";
            ResultSet rs = cn.ExcuteQueryGetTable(sql);
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            tbpxk.setRowCount(0);
            int index = 1;
            while (rs.next()) {
                row = new Vector();
                row.add(index);
                index++;
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }

                tbpxk.addRow(row);
                PhieuXuatKho_tbl.setModel(tbpxk);

            }
            rs.close();

        } catch (Exception e) {

        }
    }

    // Đẩy combo box nhân viên trong phiếu xuất
    public void TenNV_cmb_addItems() throws SQLException {
        String sql = "SELECT TenNhanVien FROM NhanVien";
        try (ResultSet rs = cn.ExcuteQueryGetTable(sql)) {
            DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
            while (rs.next()) {
                String value = rs.getString("TenNhanVien");
                comboBoxModel.addElement(value);
            }
            TenNV_cmb.setModel(comboBoxModel);
        }
    }

    final String Head[] = {"STT", "Mã CTPX", "Mã Phiếu Xuất", "Sản phẩm", "Số Lượng", "Đơn vị tính", "Thành tiền"};
    final DefaultTableModel tbctpx = new DefaultTableModel(Head, 0);

    //Load bảng chi tiết phiếu xuất kho
    public void ChiTietPhieuXuatTable_load() {
        //Đẩy mã ctpx vào textbox
        String getmactpx = "select mactpx_chu, mactpx_so from Ma";
        ResultSet rssmactpx = cn.ExcuteQueryGetTable(getmactpx);
        try {
            while (rssmactpx.next()) {
                Mactpx_chu = rssmactpx.getString("mactpx_chu");
                Mactpx_so = rssmactpx.getInt("mactpx_so");
            }
        } catch (SQLException ex) {
            Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
        MaCTPX.setText(Mactpx_chu + Mactpx_so);

        try {
            //Tính và đẩy dữ liệu vào cột giá nhập cho chi tiết phiếu xuất
            String sql2 = "UPDATE ChiTietPhieuXuat\n"
                    + "SET ThanhTienXuat = sp.GiaBan * ct.SoLuongXuat\n"
                    + "FROM ChiTietPhieuXuat ct\n"
                    + "JOIN SanPham sp ON ct.TenSanPham = sp.TenSanPham\n"
                    + "JOIN PhieuXuat pn ON ct.MaPhieuXuat = pn.MaPhieuXuat\n"
                    + "WHERE pn.MaPhieuXuat = ct.MaPhieuXuat;";
            if (cn.ExcuteQueryUpdateDB(sql2)) {
                System.out.println("Da tinh het thanh tien cua cac chi tiet phieu nhap");
            }
            //Update tổng tiền từ các CTPX vào bảng Phiếu xuất
            String tongTienCalc = "UPDATE PhieuXuat\n"
                    + "SET TongTienXuat = (\n"
                    + "    SELECT SUM(ThanhTienXuat)\n"
                    + "    FROM ChiTietPhieuXuat\n"
                    + "    WHERE ChiTietPhieuXuat.MaPhieuXuat = PhieuXuat.MaPhieuXuat\n"
                    + ")\n"
                    + "WHERE EXISTS (\n"
                    + "    SELECT 1\n"
                    + "    FROM ChiTietPhieuXuat\n"
                    + "    WHERE ChiTietPhieuXuat.MaPhieuXuat = PhieuXuat.MaPhieuXuat\n"
                    + ")";
            if (cn.ExcuteQueryUpdateDB(tongTienCalc)) {
                System.out.println("Đã tính tổng tiền các phiếu nhập");
            }

            MaPX_cmb_addItems();
            SanPham_cmb_addItems();

            int number;
            Vector row = null;
            String sql = "SELECT ct.MaChiTietPhieuXuat, ct.MaPhieuXuat, ct.TenSanPham, ct.SoLuongXuat, sp.DonVi, ct.ThanhTienXuat\n"
                    + "FROM ChiTietPhieuXuat ct\n"
                    + "JOIN PhieuXuat pn ON ct.MaPhieuXuat = pn.MaPhieuXuat\n"
                    + "JOIN SanPham sp ON ct.TenSanPham = sp.TenSanPham\n";
            ResultSet rs = cn.ExcuteQueryGetTable(sql);
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            tbctpx.setRowCount(0);
            int index = 1;
            while (rs.next()) {
                row = new Vector();
                row.add(index);
                index++;
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }

                tbctpx.addRow(row);
                ChiTiet_tb.setModel(tbctpx);

            }
            rs.close();

        } catch (Exception e) {

        }
    }

    //Click nút reset phiếu nhập
    private void ResetPhieuNhap_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetPhieuNhap_btnActionPerformed
        MaPhieuNhap_txt.setText(MaPhieuNhap_chu + MaPhieuNhap_so);
        NhanVien_cmb.setSelectedIndex(0);
        NgayNhap_txt.setText("");

        PhieuNhapTable_load();
        CTPNTable_load();
        ResetCTPN_btnActionPerformed(evt);

        SuaPhieuNhap_btn.setEnabled(false);
    }//GEN-LAST:event_ResetPhieuNhap_btnActionPerformed

    private void SuaCTPN_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuaCTPN_btnActionPerformed
        try {
            if (MaCTPN_txt.getText().equals("") || MaPhieuNhap_cmb.getSelectedItem().toString().equals("") || SanPhamCTPN_cmb.getSelectedItem().toString().equals("")
                    || SoLuongCTPN_txt.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
            } else {
                String sql = "Update ChiTietPhieuNhap Set TenSanPham = N'" + SanPhamCTPN_cmb.getSelectedItem().toString() + "',"
                        + "SoLuongNhap= '" + SoLuongCTPN_txt.getText() + "'\n"
                        + "Where MaChiTietPhieuNhap = '" + MaCTPN_txt.getText() + "' ";
                String sql2 = "UPDATE ChiTietPhieuNhap\n"
                        + "SET ThanhTienNhap = GiaNhap * SoLuongNhap\n"
                        + "FROM ChiTietPhieuNhap\n"
                        + "JOIN SanPham ON ChiTietPhieuNhap.TenSanPham = SanPham.TenSanPham";
                boolean execute = cn.ExcuteQueryUpdateDB(sql);
                boolean execute2 = cn.ExcuteQueryUpdateDB(sql2);
                if (execute && execute2) {
                    JOptionPane.showMessageDialog(rootPane, "Sửa chi tiết phiếu nhập thành công!");
                    //Update bảng phiếu nhập bên trên theo các chi tiết phiếu nhập bên dưới vì đã có một CTPN bị chỉnh sửa
                    String tongTienCalc = "UPDATE PhieuNhap\n"
                            + "SET TongTienNhap = (\n"
                            + "    SELECT SUM(ThanhTienNhap)\n"
                            + "    FROM ChiTietPhieuNhap\n"
                            + "    WHERE ChiTietPhieuNhap.MaPhieuNhap = PhieuNhap.MaPhieuNhap\n"
                            + ")\n"
                            + "WHERE EXISTS (\n"
                            + "    SELECT 1\n"
                            + "    FROM ChiTietPhieuNhap\n"
                            + "    WHERE ChiTietPhieuNhap.MaPhieuNhap = PhieuNhap.MaPhieuNhap\n"
                            + ")";
                    if (cn.ExcuteQueryUpdateDB(tongTienCalc)) {
                        System.out.println("Đã tính tổng tiền các phiếu nhập");
                    }
                    ResetCTPN_btnActionPerformed(evt);
                }

            }

        } catch (Exception e) {

        }
    }//GEN-LAST:event_SuaCTPN_btnActionPerformed

    private void CCCDNhanVien_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CCCDNhanVien_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CCCDNhanVien_txtActionPerformed

    //click một ô trong bảng sản phẩm
    private void SanPham_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SanPham_tblMouseClicked

        SuaSanPham_btn.setEnabled(true);
        XoaSanPham_btn.setEnabled(true);

        int x = DucAnh.mousePressed(evt, SanPham_tbl);

        MaSanPham_txt.setText(SanPham_tbl.getValueAt(x, 1) + "");
        TenSanPham_txt.setText(SanPham_tbl.getValueAt(x, 2) + "");
        LoaiSanPham_cmb.setSelectedItem(SanPham_tbl.getValueAt(x, 3) + "");
        HangSanXuat_txt.setText(SanPham_tbl.getValueAt(x, 4) + "");
        DonVi_txt.setText(SanPham_tbl.getValueAt(x, 5) + "");
        GiaNhap_txt.setText(SanPham_tbl.getValueAt(x, 6) + "");
        GiaBan_txt.setText(SanPham_tbl.getValueAt(x, 7) + "");
        MaSanPham_txt.setEnabled(false);


    }//GEN-LAST:event_SanPham_tblMouseClicked

    //Load bảng loại sản phẩm
    final String headerLoaiSanPham[] = {"STT", "Mã loại sản phẩm", "Tên loại sản phẩm"};
    final DefaultTableModel tb2 = new DefaultTableModel(headerLoaiSanPham, 0);

    public void LoaiSanPhamTable_load() {

        //Đẩy mã loại sản phẩm vào textbox
        String getmaloaisanpham = "select maloaisanpham_chu, maloaisanpham_so from Ma";
        ResultSet rssmaloaisp = cn.ExcuteQueryGetTable(getmaloaisanpham);
        try {
            while (rssmaloaisp.next()) {
                MaLoaiSanPham_chu = rssmaloaisp.getString("maloaisanpham_chu");
                MaLoaiSanPham_so = rssmaloaisp.getInt("maloaisanpham_so");
            }
        } catch (SQLException ex) {
            Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
        MaLoaiSanPham_txt.setText(MaLoaiSanPham_chu + MaLoaiSanPham_so);

        try {
            int number;
            Vector row = null;
            String sql = "select * from LoaiSanPham";
            ResultSet rs = cn.ExcuteQueryGetTable(sql);
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            tb2.setRowCount(0);
            int index = 1;
            while (rs.next()) {
                row = new Vector();
                row.add(index);
                index++;
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }

                tb2.addRow(row);
                LoaiSanPham_tbl.setModel(tb2);

            }
            rs.close();

        } catch (Exception e) {

        }
    }

    //Click nút xóa loại sản phẩm
    private void XoaLoaiSanPham_btnClicked(java.awt.event.ActionEvent evt) {
        try {
            String sql = "Delete LoaiSanPham where MaLoaiSanPham = '" + MaLoaiSanPham_txt.getText() + "' ";
            boolean execute = cn.ExcuteQueryUpdateDB(sql);
            if (execute) {
                JOptionPane.showMessageDialog(rootPane, "Xóa loại sản phẩm thành công!");
                ResetLoaiSanPham_btnActionPerformed(evt);
                LoaiSanPham_cmb_addItems();
            }
        } catch (Exception e) {

        }
    }

    //Click nút sửa loại sản phẩm
    private void SuaLoaiSanPham_btnClicked(java.awt.event.ActionEvent evt) {
        String a = TenLoaiSanPham_txt.getText() + "";
        try {
            if (MaLoaiSanPham_txt.getText().equals("") || TenLoaiSanPham_txt.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
            } else {
                String sql = "Update LoaiSanPham Set TenLoaiSanPham = N'" + TenLoaiSanPham_txt.getText() + "'"
                        + "Where MaLoaiSanPham = N'" + MaLoaiSanPham_txt.getText() + "' ";
                String sql2 = "Update SanPham Set TenLoaiSanPham = N'" + TenLoaiSanPham_txt.getText() + "'"
                        + "Where TenLoaiSanPham = N'" + currentSelectedLoaiSanPham + "' ";
                boolean execute = cn.ExcuteQueryUpdateDB(sql);
                boolean execute2 = cn.ExcuteQueryUpdateDB(sql2);
                if (execute && execute2) {
                    JOptionPane.showMessageDialog(rootPane, "Sửa loại sản phẩm thành công!");
                    ResetLoaiSanPham_btnClicked(evt);
                    LoaiSanPham_cmb_addItems();
                }
                //Load lại bảng sản phẩm bên dưới vì đã có một loại sản phẩm bị sửa

                String sql3 = "SELECT sp.MaSanPham, sp.TenSanPham, lsp.TenLoaiSanPham\n"
                        + "FROM SanPham sp\n"
                        + "JOIN LoaiSanPham lsp ON sp.TenLoaiSanPham = lsp.TenLoaiSanPham\n"
                        + "WHERE lsp.TenLoaiSanPham = N'" + a + "';";

                ResultSet rs = cn.ExcuteQueryGetTable(sql3);
                try {
                    int number;
                    Vector row = null;
                    ResultSetMetaData metadata = rs.getMetaData();
                    number = metadata.getColumnCount();
                    SanPhamTheoLoai.setRowCount(0);
                    int index = 1;

                    while (rs.next()) {

                        row = new Vector();
                        row.add(index);
                        index++;
                        for (int i = 1; i <= number; i++) {
                            row.addElement(rs.getString(i));
                        }

                        SanPhamTheoLoai.addRow(row);
                        SanPhamTheoLoai_tbl.setModel(SanPhamTheoLoai);

                    }

                    rs.close();

                } catch (Exception e) {

                }
            }
        } catch (Exception e) {

        }
    }

    //Click nút thêm loại sản phẩm
    private void ThemLoaiSanPham_btnClicked(java.awt.event.ActionEvent evt) {
        if (MaLoaiSanPham_txt.getText().equals("") || TenLoaiSanPham_txt.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
        } else {
            String sql_check_pk = "Select MaLoaiSanPham from LoaiSanPham where MaLoaiSanPham = N'" + MaLoaiSanPham_txt.getText() + "'";
            String sql_check2 = "Select TenLoaiSanPham from LoaiSanPham where TenLoaiSanPham = N'" + TenLoaiSanPham_txt.getText() + "'";

            ResultSet rs = cn.ExcuteQueryGetTable(sql_check_pk);
            ResultSet rs2 = cn.ExcuteQueryGetTable(sql_check2);
            boolean check1 = false;
            boolean check2 = false; //false = chưa trùng
            try {
                if (rs.next()) {
                    check1 = true; //true = trùng
                }
                if (rs2.next()) {
                    check2 = true;
                }
            } catch (SQLException ex) {
                Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (check1) {
                JOptionPane.showMessageDialog(this, "Mã loại sản phẩm này đã tồn tại!\nLưu ý: Không được nhập trùng loại sản phẩm!");
            } else if (check2) {
                JOptionPane.showMessageDialog(rootPane, "Tên loại sản phẩm này đã tồn tại!\nLưu ý: Không được nhập trùng tên loại sản phẩm!");
            } else {
                String sql = "Insert into LoaiSanPham (MaLoaiSanPham, TenLoaiSanPham) "
                        + "values( N'" + MaLoaiSanPham_txt.getText() + "', N'" + TenLoaiSanPham_txt.getText() + "' )";
                cn.ExcuteQueryUpdateDB(sql);
                JOptionPane.showMessageDialog(this, "Thêm mới loại sản phẩm thành công!");
                LoaiSanPhamTable_load();
                ResetLoaiSanPham_btnActionPerformed(evt);
                try {
                    LoaiSanPham_cmb_addItems();
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }

                //Tăng mã loại sp lên 1 đơn vị
                String increaseMaLoaiSP = "UPDATE Ma SET maloaisanpham_so = maloaisanpham_so + 1";
                boolean execute = cn.ExcuteQueryUpdateDB(increaseMaLoaiSP);
                String getmaloaisanpham = "select maloaisanpham_chu, maloaisanpham_so from Ma";
                ResultSet rssmaloaisp = cn.ExcuteQueryGetTable(getmaloaisanpham);
                try {
                    while (rssmaloaisp.next()) {
                        MaLoaiSanPham_chu = rssmaloaisp.getString("maloaisanpham_chu");
                        MaLoaiSanPham_so = rssmaloaisp.getInt("maloaisanpham_so");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                MaLoaiSanPham_txt.setText(MaLoaiSanPham_chu + MaLoaiSanPham_so);
            }
        }
    }

    //Click nút reset loại sản phẩm
    private void ResetLoaiSanPham_btnClicked(java.awt.event.ActionEvent evt) {
        MaLoaiSanPham_txt.setText(MaLoaiSanPham_chu + MaLoaiSanPham_so);
        TenLoaiSanPham_txt.setText("");

        LoaiSanPhamTable_load();
        SanPhamTheoLoai.setRowCount(0);
        SanPhamTheoLoai_tbl.setModel(SanPhamTheoLoai);

        XoaLoaiSanPham_btn.setEnabled(false);
        SuaLoaiSanPham_btn.setEnabled(false);
    }


    private void KhachHang_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KhachHang_tblMouseClicked
        SuaKhachHang_btn.setEnabled(true);
        XoaKhachHang_btn.setEnabled(true);

        int x = DucAnh.mousePressed(evt, KhachHang_tbl);

        MaKhachHang.setText(KhachHang_tbl.getValueAt(x, 1) + "");
        TenKhachHang.setText(KhachHang_tbl.getValueAt(x, 2) + "");
        DiaChiKhachHang.setText(KhachHang_tbl.getValueAt(x, 3) + "");
        String SDT2 = KhachHang_tbl.getValueAt(x, 4) + "";
        SDT2 = SDT2.substring(0, 7);
        switch (SDT2) {
            case ("+84"):
                SDT_cmb.setSelectedIndex(0);
                break;
            case ("+44"):
                SDT_cmb.setSelectedIndex(1);
                break;
            case ("+49"):
                SDT_cmb.setSelectedIndex(2);
                break;
            case ("+82"):
                SDT_cmb.setSelectedIndex(3);
                break;
            case ("+86"):
                SDT_cmb.setSelectedIndex(4);
                break;
        }
        String SDT1 = KhachHang_tbl.getValueAt(x, 4) + "";
        SDT1 = SDT1.substring(3, 9);
        SDTKhachHang.setText(SDT1 + "");
        EmailKhachHang.setText(KhachHang_tbl.getValueAt(x, 5) + "");
        LoaiKhachHang_cmb.setSelectedItem(KhachHang_tbl.getValueAt(x, 6) + "");
        MaKhachHang.setEnabled(false);
    }//GEN-LAST:event_KhachHang_tblMouseClicked

    private void LoaiKhachHang_cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoaiKhachHang_cmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoaiKhachHang_cmbActionPerformed

    private void ThemKhachHang_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemKhachHang_btnActionPerformed
        if (MaKhachHang.getText().equals("") || TenKhachHang.getText().equals("") || DiaChiKhachHang.getText().equals("")
                || SDTKhachHang.getText().equals("") || EmailKhachHang.getText().equals("") || LoaiKhachHang_cmb.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
        } else {
            String sql_check_pk = "Select MaKhachHang from KhachHang where MaKhachHang = '" + MaKhachHang.getText() + "'";
            ResultSet rs = cn.ExcuteQueryGetTable(sql_check_pk);
            boolean check = false; //false = chưa trùng
            try {
                if (rs.next()) {
                    check = true; //true = trùng
                }
            } catch (SQLException ex) {
                Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (check) {
                JOptionPane.showMessageDialog(this, "Mã khách hàng này đã tồn tại!\nLưu ý: Không được nhập trùng !");
            } else if (DucAnh.checkString(SDTKhachHang.getText(), 9) == false) {
                JOptionPane.showMessageDialog(rootPane, "SĐT không hợp lệ\n"
                        + "Số điện thoại phải có 9 chữ số và không chứa chữ cái nào\n"
                        + "Bạn hãy nhập lại SĐT!");
                return;
            } else {
                String sql = "Insert into KhachHang (MaKhachHang, TenKhachHang, DiaChiKhachHang, SDTKhachHang, EmailKhachHang, LoaiKhachHang) "
                        + "values( '" + MaKhachHang.getText() + "', '" + TenKhachHang.getText() + "', '" + DiaChiKhachHang.getText() + "' , "
                        + "'" + SDTKhachHang.getText() + "' , '" + EmailKhachHang.getText() + "' , '" + LoaiKhachHang_cmb.getSelectedItem().toString() + "' )";
                cn.ExcuteQueryUpdateDB(sql);
                JOptionPane.showMessageDialog(this, "Thêm mới khách hàng thành công!");
                KhachHangTable_load();
                ResetActionPerformed(evt);

                //Tăng mã khách hàng lên 1 đơn vị
                String increaseMakh = "UPDATE Ma SET makhachhang_so = makhachhang_so + 1";
                boolean execute = cn.ExcuteQueryUpdateDB(increaseMakh);
                String getmakh = "select makhachhang_chu, makhachhang_so from Ma";
                ResultSet rssmakh = cn.ExcuteQueryGetTable(getmakh);
                try {
                    while (rssmakh.next()) {
                        MaKhachHang_chu = rssmakh.getString("makhachhang_chu");
                        MaKhachHang_so = rssmakh.getInt("makhachhang_so");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                MaKhachHang.setText(MaKhachHang_chu + MaKhachHang_so);

            }
        }
    }//GEN-LAST:event_ThemKhachHang_btnActionPerformed

    private void SuaKhachHang_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuaKhachHang_btnActionPerformed
        try {
            if (MaKhachHang.getText().equals("") || TenKhachHang.getText().equals("") || DiaChiKhachHang.getText().equals("")
                    || SDTKhachHang.getText().equals("") || EmailKhachHang.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
            } else {
                String sql = "Update KhachHang Set TenKhachHang = '" + TenKhachHang.getText() + "', DiaChiKhachHang = '" + DiaChiKhachHang.getText() + "',"
                        + "SDTKhachHang = '" + SDTKhachHang.getText() + "', Email = '" + EmailKhachHang.getText() + "', LoaiKhachHang = '" + LoaiKhachHang_cmb.getSelectedItem().toString() + "'"
                        + "Where MaKhachHang = '" + MaKhachHang.getText() + "' ";
                boolean execute = cn.ExcuteQueryUpdateDB(sql);
                if (execute) {
                    JOptionPane.showMessageDialog(rootPane, "Sửa khách hàng thành công!");
                    ResetActionPerformed(evt);
                }
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_SuaKhachHang_btnActionPerformed

    private void XoaKhachHang_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaKhachHang_btnActionPerformed
        try {
            String sql = "Delete KhachHang where MaKhachHang = '" + MaKhachHang.getText() + "' ";
            boolean execute = cn.ExcuteQueryUpdateDB(sql);
            if (execute) {
                JOptionPane.showMessageDialog(rootPane, "Xóa khách hàng thành công!");
                ResetActionPerformed(evt);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_XoaKhachHang_btnActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        MaKhachHang.setText(MaKhachHang_chu + MaKhachHang_so);
        TenKhachHang.setText("");
        DiaChiKhachHang.setText("");
        SDTKhachHang.setText("");
        EmailKhachHang.setText("");
        LoaiKhachHang_cmb.setSelectedIndex(0);
        KhachHangTable_load();
        Search_txt.setText("");
        Search_cmb.setSelectedIndex(0);
        XoaNhanVien_btn.setEnabled(false);
        SuaNhanVien_btn.setEnabled(false);
    }//GEN-LAST:event_ResetActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

    }//GEN-LAST:event_formMouseClicked

    private void Menu_paneComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_Menu_paneComponentShown

    }//GEN-LAST:event_Menu_paneComponentShown

    private void DangXuatPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_DangXuatPanelComponentShown
        formDangNhap frmdn = new formDangNhap();
        int result = JOptionPane.showConfirmDialog(this, "Bạn muốn đăng xuất?", "Thông báo",
                JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            frmdn.show();
            this.dispose();
        } else if (result == JOptionPane.NO_OPTION) {
            Menu_pane.setSelectedIndex(0);

        }

    }//GEN-LAST:event_DangXuatPanelComponentShown

    private void TenNhanVien_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TenNhanVien_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TenNhanVien_txtActionPerformed

    private void Thempxk_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Thempxk_btnActionPerformed
        if (MaPhieuXuat.getText().equals("") || NgayLap.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
        } else {
            String sql_check_pk = "Select MaPhieuXuat from PhieuXuat where MaPhieuXuat = '" + MaPhieuXuat.getText() + "'";
            ResultSet rs = cn.ExcuteQueryGetTable(sql_check_pk);
            boolean check = false; //false = chưa trùng
            try {
                if (rs.next()) {
                    check = true; //true = trùng
                }
            } catch (SQLException ex) {
                Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (check) {
                JOptionPane.showMessageDialog(this, "Mã phiếu xuất này đã tồn tại!\nLưu ý: Không được nhập trùng !");
            } else {
                String sql = "Insert into PhieuXuat (MaPhieuXuat, TenKhachHang, TenNhanVien, NgayXuat) "
                        + "values( N'" + MaPhieuXuat.getText() + "',N'" + TenKH_cmb.getSelectedItem().toString() + "', N'" + TenNV_cmb.getSelectedItem().toString() + "', "
                        + "N'" + NgayLap.getText() + "' )";
                cn.ExcuteQueryUpdateDB(sql);
                JOptionPane.showMessageDialog(this, "Thêm mới phiếu xuất thành công!");
                PhieuXuatKhoTable_load();
                Resetpxk_btnActionPerformed(evt);

                //Tăng mã phiếu xuất lên 1 đơn vị
                String increaseMaPhieuXuat = "UPDATE Ma SET maphieuxuat_so = maphieuxuat_so + 1";
                boolean execute = cn.ExcuteQueryUpdateDB(increaseMaPhieuXuat);
                String getmaphieuxuat = "select maphieuxuat_chu, maphieuxuat_so from Ma";
                ResultSet rssmaphieuxuat = cn.ExcuteQueryGetTable(getmaphieuxuat);
                try {
                    while (rssmaphieuxuat.next()) {
                        MaPhieuXuat_chu = rssmaphieuxuat.getString("maphieuxuat_chu");
                        MaPhieuXuat_so = rssmaphieuxuat.getInt("maphieuxuat_so");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                MaPhieuXuat.setText(MaPhieuXuat_chu + MaPhieuXuat_so);
            }

        }
    }//GEN-LAST:event_Thempxk_btnActionPerformed

    private void SuaPXK_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuaPXK_btnActionPerformed
        if (DucAnh.isValidDate(NgayLap.getText()) == false) {
            JOptionPane.showMessageDialog(rootPane, "Ngày nhập không hợp lệ\n"
                    + "Lưu ý: Ngày nhập hợp lệ phải có kiểu: yyyy-mm-dd (năm-tháng-ngày) và phải tồn tại\n"
                    + "Bạn hãy nhập lại ngày xuất!");
            return;
        }
        String sql = "Update PhieuXuat Set TenKhachHang = N'" + TenKH_cmb.getSelectedItem().toString() + "',TenNhanVien = N'" + TenNV_cmb.getSelectedItem().toString() + "', NgayXuat = N'" + NgayLap.getText() + "'\n "
                + "WHERE MaPhieuXuat = N'" + MaPhieuXuat.getText() + "'";
        cn.ExcuteQueryUpdateDB(sql);
        JOptionPane.showMessageDialog(this, "Sửa phiếu xuất thành công!");
        PhieuXuatKhoTable_load();
        Resetpxk_btnActionPerformed(evt);
    }//GEN-LAST:event_SuaPXK_btnActionPerformed

    private void Resetpxk_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Resetpxk_btnActionPerformed
        MaPhieuXuat.setText(MaPhieuXuat_chu + MaPhieuXuat_so);
        TenKH_cmb.setSelectedIndex(0);
        TenNV_cmb.setSelectedIndex(0);
        NgayLap.setText("");
        PhieuXuatKhoTable_load();
        ChiTietPhieuXuatTable_load();
        Resetctpx_btnActionPerformed(evt);

        SuaPXK_btn.setEnabled(false);
    }//GEN-LAST:event_Resetpxk_btnActionPerformed

    //Hàm trả về số sản phẩm trong kho
    public int soSPDangTrongKho(String sql) throws SQLException {
        int soluong = 0;
        ResultSet rs = cn.ExcuteQueryGetTable(sql);
        while (rs.next()) {
            soluong = rs.getInt("TonKho");
            System.out.println(soluong);
        }
        return soluong;
    }

    //Click nút thêm chi tiết phiếu nhập
    private void Themctpx_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Themctpx_btnActionPerformed
        if (MaCTPX.getText().equals("") || SoLuong.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
        } else {
            String sql_check1 = "Select MaChiTietPhieuXuat from ChiTietPhieuXuat where MaChiTietPhieuXuat = N'" + MaCTPX.getText() + "'";
            ResultSet rs1 = cn.ExcuteQueryGetTable(sql_check1);
            boolean check1 = false;
            try {
                if (rs1.next()) {
                    check1 = true; //true = trùng
                }
            } catch (SQLException ex) {
                Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (check1) {
                JOptionPane.showMessageDialog(this, "Mã chi tiết phiếu xuất này đã tồn tại!\nLưu ý: Không được nhập trùng mã chi tiết phiếu nhập!");
            } else {
                if (DucAnh.checkString2(SoLuong.getText(), 3) == false) {
                    JOptionPane.showMessageDialog(rootPane, "Số lượng xuất không hợp lệ!\n"
                            + "Lưu ý: Số lượng xuất phải là số dương và bé hơn 1000!");
                    SoLuong.setText("");
                    return;
                }
                String checkTonKho = "Select TonKho from SanPham where TenSanPham = N'" + SanPham_cmb.getSelectedItem().toString() + "'";
                int tonkho = 0;
                try {
                    tonkho = soSPDangTrongKho(checkTonKho);
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (Integer.parseInt(SoLuong.getText()) > tonkho) {
                    JOptionPane.showMessageDialog(rootPane, "Số sản phẩm trong kho không đủ để xuất\n"
                            + "Lưu ý: Số sản phẩm xuất kho phải bé hơn hoặc bằng số sản phẩm đang có trong kho!");
                    return;
                }
                String sql = "Insert into ChiTietPhieuXuat (MaChiTietPhieuXuat, MaPhieuXuat, TenSanPham, SoLuongXuat) "
                        + "values( N'" + MaCTPX.getText() + "', N'" + MaPX_cmb.getSelectedItem().toString() + "', "
                        + "N'" + SanPham_cmb.getSelectedItem().toString() + "', N'" + SoLuong.getText() + "' )";
                cn.ExcuteQueryUpdateDB(sql);
                JOptionPane.showMessageDialog(this, "Thêm mới chi tiết phiếu xuất thành công!");
                PhieuXuatKhoTable_load();
                ChiTietPhieuXuatTable_load();
                Resetctpx_btnActionPerformed(evt);

                //Tăng mã ctpx lên 1 đơn vị
                String increaseMactpx = "UPDATE Ma SET mactpx_so = mactpx_so + 1";
                boolean execute = cn.ExcuteQueryUpdateDB(increaseMactpx);
                String getmactpx = "select mactpx_chu, mactpx_so from Ma";
                ResultSet rssmactpx = cn.ExcuteQueryGetTable(getmactpx);
                try {
                    while (rssmactpx.next()) {
                        Mactpx_chu = rssmactpx.getString("mactpx_chu");
                        Mactpx_so = rssmactpx.getInt("mactpx_so");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                MaCTPX.setText(Mactpx_chu + Mactpx_so);
            }
        }
    }//GEN-LAST:event_Themctpx_btnActionPerformed

    private void Suactpx_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Suactpx_btnActionPerformed
        try {
            if (MaCTPX.getText().equals("") || MaPX_cmb.getSelectedItem().toString().equals("") || SanPham_cmb.getSelectedItem().toString().equals("")
                    || SoLuong.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
            } else {
                String sql = "Update ChiTietPhieuXuat Set TenSanPham = N'" + SanPham_cmb.getSelectedItem().toString() + "',"
                        + "SoLuongXuat= '" + SoLuong.getText() + "'\n"
                        + "Where MaChiTietPhieuXuat = '" + MaCTPX.getText() + "' ";
                String sql2 = "UPDATE ChiTietPhieuXuat\n"
                        + "SET ThanhTienXuat = GiaBan * SoLuongXuat\n"
                        + "FROM ChiTietPhieuXuat\n"
                        + "JOIN SanPham ON ChiTietPhieuXuat.TenSanPham = SanPham.TenSanPham";
                boolean execute = cn.ExcuteQueryUpdateDB(sql);
                boolean execute2 = cn.ExcuteQueryUpdateDB(sql2);
                if (execute && execute2) {
                    JOptionPane.showMessageDialog(rootPane, "Sửa chi tiết phiếu nhập thành công!");
                    //Update bảng phiếu nhập bên trên theo các chi tiết phiếu nhập bên dưới vì đã có một CTPN bị chỉnh sửa
                    String tongTienCalc = "UPDATE PhieuXuat\n"
                            + "SET TongTienXuat = (\n"
                            + "    SELECT SUM(ThanhTienXuat)\n"
                            + "    FROM ChiTietPhieuXuat\n"
                            + "    WHERE ChiTietPhieuXuat.MaPhieuXuat = PhieuXuat.MaPhieuXuat\n"
                            + ")\n"
                            + "WHERE EXISTS (\n"
                            + "    SELECT 1\n"
                            + "    FROM ChiTietPhieuXuat\n"
                            + "    WHERE ChiTietPhieuXuat.MaPhieuXuat = PhieuXuat.MaPhieuXuat\n"
                            + ")";
                    if (cn.ExcuteQueryUpdateDB(tongTienCalc)) {
                        System.out.println("Đã tính tổng tiền các phiếu xuất");
                    }
                    PhieuXuatKhoTable_load();
                    Resetctpx_btnActionPerformed(evt);
                }

            }

        } catch (Exception e) {

        }
    }//GEN-LAST:event_Suactpx_btnActionPerformed

    private void Xoactpx_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Xoactpx_btnActionPerformed
        try {
            String sql2 = "Delete ChiTietPhieuXuat where MaChiTietPhieuXuat = N'" + MaCTPX.getText() + "' ";
            boolean execute2 = cn.ExcuteQueryUpdateDB(sql2);
            if (execute2) {
                JOptionPane.showMessageDialog(rootPane, "Xóa chi tiết phiếu xuất thành công!");
                //Update tổng tiền từ các CTPN vào bảng Phiếu xuất
                String tongTienCalc = "UPDATE PhieuXuat\n"
                        + "SET TongTienXuat = (\n"
                        + "    SELECT SUM(ThanhTienXuat)\n"
                        + "    FROM ChiTietPhieuXuat\n"
                        + "    WHERE ChiTietPhieuXuat.MaPhieuXuat = PhieuXuat.MaPhieuXuat\n"
                        + ")\n"
                        + "WHERE EXISTS (\n"
                        + "    SELECT 1\n"
                        + "    FROM ChiTietPhieuXuat\n"
                        + "    WHERE ChiTietPhieuXuat.MaPhieuXuat = PhieuXuat.MaPhieuXuat\n"
                        + ")";
                if (cn.ExcuteQueryUpdateDB(tongTienCalc)) {
                    System.out.println("Đã tính tổng tiền các phiếu xuất");
                }
                Resetpxk_btnActionPerformed(evt);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_Xoactpx_btnActionPerformed

    private void Resetctpx_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Resetctpx_btnActionPerformed
        MaCTPX.setText(Mactpx_chu + Mactpx_so);
        MaPX_cmb.setSelectedIndex(0);
        SanPham_cmb.setSelectedIndex(0);
        SoLuong.setText("");
        ChiTietPhieuXuatTable_load();

        Suactpx_btn.setEnabled(false);
        Xoactpx_btn.setEnabled(false);
    }//GEN-LAST:event_Resetctpx_btnActionPerformed

    //ducanh
    private void XoaLoaiSanPham_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaLoaiSanPham_btnActionPerformed
        XoaLoaiSanPham_btnClicked(evt);
    }//GEN-LAST:event_XoaLoaiSanPham_btnActionPerformed

    private void ThemLoaiSanPham_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemLoaiSanPham_btnActionPerformed
        ThemLoaiSanPham_btnClicked(evt);
    }//GEN-LAST:event_ThemLoaiSanPham_btnActionPerformed

    private void SuaLoaiSanPham_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuaLoaiSanPham_btnActionPerformed
        SuaLoaiSanPham_btnClicked(evt);
    }//GEN-LAST:event_SuaLoaiSanPham_btnActionPerformed

    private void ResetLoaiSanPham_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetLoaiSanPham_btnActionPerformed
        ResetLoaiSanPham_btnClicked(evt);
    }//GEN-LAST:event_ResetLoaiSanPham_btnActionPerformed

    String headerSanPhamTheoLoai[] = {"STT", "Mã sản phẩm", "Tên sản phẩm", "Loại sản phẩm"};
    DefaultTableModel SanPhamTheoLoai = new DefaultTableModel(headerSanPhamTheoLoai, 0);
    //Click một ô trong bảng loại sản phẩm
    String currentSelectedLoaiSanPham;
    private void LoaiSanPham_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoaiSanPham_tblMouseClicked

        LoaiSanPham_tbl.setDefaultEditor(Object.class, null);

        SuaLoaiSanPham_btn.setEnabled(true);
        XoaLoaiSanPham_btn.setEnabled(true);

        int x = DucAnh.mousePressed(evt, LoaiSanPham_tbl);
        System.out.println(x);
        MaLoaiSanPham_txt.setText(LoaiSanPham_tbl.getValueAt(x, 1) + "");
        TenLoaiSanPham_txt.setText(LoaiSanPham_tbl.getValueAt(x, 2) + "");
        currentSelectedLoaiSanPham = LoaiSanPham_tbl.getValueAt(x, 2) + "";
        System.out.println(currentSelectedLoaiSanPham);
        MaLoaiSanPham_txt.setEnabled(false);

        //Đổ dữ liệu lên bảng sản phẩm bên dưới theo loại sản phẩm
        String a = LoaiSanPham_tbl.getValueAt(x, 2) + "";
        String sql = "SELECT sp.MaSanPham, sp.TenSanPham, lsp.TenLoaiSanPham\n"
                + "FROM SanPham sp\n"
                + "JOIN LoaiSanPham lsp ON sp.TenLoaiSanPham = lsp.TenLoaiSanPham\n"
                + "WHERE lsp.TenLoaiSanPham = N'" + a + "';";

        ResultSet rs = cn.ExcuteQueryGetTable(sql);
        //Load bảng sản phẩm bên dưới theo loại sản phẩm

        try {
            int number;
            Vector row = null;
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            SanPhamTheoLoai.setRowCount(0);
            int index = 1;

            while (rs.next()) {

                row = new Vector();
                row.add(index);
                index++;
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }

                SanPhamTheoLoai.addRow(row);
                SanPhamTheoLoai_tbl.setModel(SanPhamTheoLoai);

            }

            rs.close();

        } catch (Exception e) {

        }
    }//GEN-LAST:event_LoaiSanPham_tblMouseClicked

    //Đổi tab trong menu chính
    private void Menu_paneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu_paneMouseClicked
        int selectedIndex = Menu_pane.getSelectedIndex();
        System.out.println(selectedIndex);
        switch (selectedIndex) {
            case 0: //Sản phẩm

                SanPhamTable_load();
                try {
                    LoaiSanPham_cmb_addItems();
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case 1: //Nhân viên
                if (formDangNhap.quyen_bit == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Tài khoản của bạn không có quyền để thực hiện tác vụ này!!!");
                    Menu_pane.setSelectedIndex(0);
                    break;
                } else {
                    NhanVienTable_load();
                    try {
                        ChucVu_cmb_addItems();
                    } catch (SQLException ex) {
                        Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    SuaNhanVien_btn.setEnabled(false);
                    XoaNhanVien_btn.setEnabled(false);
                    break;
                }

            case 2://Khách hàng
                KhachHangTable_load();
                try {
                    LoaiKhachHang_cmb_addItems();
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }

                break;
            case 3://Nhập kho
                PhieuNhapTable_load();
                CTPNTable_load();
                try {
                    NhanVien_cmb_addItems();
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                SuaPhieuNhap_btn.setEnabled(false);
                SuaCTPN_btn.setEnabled(false);
                XoaCTPN_btn.setEnabled(false);
                //Đẩy đơn vị sản phẩm tương ứng với sản phẩm trong combobox đang chọn
                String a11111 = SanPhamCTPN_cmb.getSelectedItem().toString();
                String sql1111 = "Select DonVi from SanPham where TenSanPham = N'" + a11111 + "'";
                ResultSet rs = cn.ExcuteQueryGetTable(sql1111);
                String b11111 = "";
                try {
                    while (rs.next()) {
                        b11111 = rs.getString("DonVi");
                        DonViNhapCTPN_txt.setText(b11111);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;

            case 4://Xuất kho
                PhieuXuatKhoTable_load();
                try {
                    TenNV_cmb_addItems();
                } catch (Exception ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                ChiTietPhieuXuatTable_load();
                try {
                    SanPham_cmb_addItems();
                } catch (Exception ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                //Đẩy đơn vị sản phẩm tương ứng với sản phẩm trong combobox đang chọn
                String a22222 = SanPham_cmb.getSelectedItem().toString();
                String sql22222 = "Select DonVi from SanPham where TenSanPham = N'" + a22222 + "'";
                ResultSet rs22222 = cn.ExcuteQueryGetTable(sql22222);
                String b22222 = "";
                try {
                    while (rs22222.next()) {
                        b22222 = rs22222.getString("DonVi");
                        DonViXuatCTPX_txt.setText(b22222);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;

            case 5://Thống kê
                ThongKeTable_load();
                break;
        }
    }//GEN-LAST:event_Menu_paneMouseClicked

    //Đổi tab trong menu sản phẩm
    private void SanPham_paneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SanPham_paneMouseClicked
        int selectedIndex = SanPham_pane.getSelectedIndex();
        System.out.println(selectedIndex);
        switch (selectedIndex) {
            case 0://Sản phẩm
                SanPhamTable_load();

                break;

            case 1://Loại sản phẩm

                LoaiSanPhamTable_load();

                break;
            case 2:

                break;

        }
    }//GEN-LAST:event_SanPham_paneMouseClicked

    //Click nút thêm sản phẩm
    private void ThemSanPham_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemSanPham_btnActionPerformed
        if (MaSanPham_txt.getText().equals("") || TenSanPham_txt.getText().equals("") || HangSanXuat_txt.getText().equals("")
                || DonVi_txt.getText().equals("") || GiaNhap_txt.getText().equals("") || GiaBan_txt.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
        } else if (DucAnh.checkString3(MaSanPham_txt.getText(), 20) == false || DucAnh.checkString3(TenSanPham_txt.getText(), 50) == false || DucAnh.checkString3(HangSanXuat_txt.getText(), 50) == false
                || DucAnh.checkString3(DonVi_txt.getText(), 20) == false || DucAnh.checkString3(GiaNhap_txt.getText(), 20) == false || DucAnh.checkString3(GiaBan_txt.getText(), 20) == false) {
            JOptionPane.showMessageDialog(this, "Một giá trị nào đó quá dài và vượt quá quy định! Hãy kiểm tra và nhập lại!");
        } else {
            String sql_check_pk = "Select MaSanPham from SanPham where MaSanPham = '" + MaSanPham_txt.getText() + "'";
            ResultSet rs = cn.ExcuteQueryGetTable(sql_check_pk);
            String sql2 = "Select TenSanPham from SanPham where TenSanPham = '" + TenSanPham_txt.getText() + "'";
            ResultSet rs2 = cn.ExcuteQueryGetTable(sql2);
            boolean check1 = false; //false = chưa trùng
            boolean check2 = false;
            try {
                if (rs.next()) {
                    check1 = true; //true = trùng
                } else if (rs2.next()) {
                    check2 = true;
                }
            } catch (SQLException ex) {
                Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (check1) {
                JOptionPane.showMessageDialog(this, "Mã sản phẩm này đã tồn tại!\nLưu ý: Không được nhập trùng sản phẩm!");
            } else if (check2) {
                JOptionPane.showMessageDialog(this, "Tên sản phẩm này đã tồn tại!\nLưu ý: Không được nhập trùng tên sản phẩm!");
            } else {
                try {
                    String sql = "Insert into SanPham (MaSanPham, TenSanPham, TenLoaiSanPham, HangSanXuat, DonVi, GiaNhap, GiaBan) "
                            + "values( N'" + MaSanPham_txt.getText() + "', N'" + TenSanPham_txt.getText() + "',  N'" + LoaiSanPham_cmb.getSelectedItem().toString() + "' , "
                            + "N'" + HangSanXuat_txt.getText() + " ', N'" + DonVi_txt.getText() + "' , N'" + Integer.parseInt(GiaNhap_txt.getText()) + "' , N'" + Integer.parseInt(GiaBan_txt.getText()) + "' )";
                    cn.ExcuteQueryUpdateDB(sql);

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Giá nhập hoặc giá bán phải là số!");
                    GiaNhap_txt.setText("");
                    GiaBan_txt.setText("");
                    return;
                }
                JOptionPane.showMessageDialog(this, "Thêm mới sản phẩm thành công!");
                SanPhamTable_load();
                ResetSanPham_btnActionPerformed(evt);

                //Tăng mã sp lên 1 đơn vị
                String increaseMaSP_so = "UPDATE Ma SET masanpham_so = masanpham_so + 1";
                boolean execute = cn.ExcuteQueryUpdateDB(increaseMaSP_so);
                String getmasanpham = "select masanpham_chu, masanpham_so from Ma";
                ResultSet rssmasp = cn.ExcuteQueryGetTable(getmasanpham);
                try {
                    while (rssmasp.next()) {
                        MaSanPham_chu = rssmasp.getString("masanpham_chu");
                        MaSanPham_so = rssmasp.getInt("masanpham_so");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                MaSanPham_txt.setText(MaSanPham_chu + MaSanPham_so);
            }
        }
    }//GEN-LAST:event_ThemSanPham_btnActionPerformed

    //click nút reset sản phẩm
    private void ResetSanPham_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetSanPham_btnActionPerformed
        MaSanPham_txt.setText(MaSanPham_chu + MaSanPham_so);
        TenSanPham_txt.setText("");
        LoaiSanPham_cmb.setSelectedIndex(0);
        HangSanXuat_txt.setText("");
        DonVi_txt.setText("");
        GiaNhap_txt.setText("");
        GiaBan_txt.setText("");

        SanPhamTable_load();

        SearchSanPham_txt.setText("");
        SearchTypeSanPham_cmb.setSelectedIndex(0);

        XoaSanPham_btn.setEnabled(false);
        SuaSanPham_btn.setEnabled(false);
    }//GEN-LAST:event_ResetSanPham_btnActionPerformed

    //Click nút xóa sản phẩm
    private void XoaSanPham_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaSanPham_btnActionPerformed
        try {
            String sql = "Delete SanPham where MaSanPham = '" + MaSanPham_txt.getText() + "' ";
            boolean execute = cn.ExcuteQueryUpdateDB(sql);
            if (execute) {
                JOptionPane.showMessageDialog(rootPane, "Xóa sản phẩm thành công!");
                ResetSanPham_btnActionPerformed(evt);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_XoaSanPham_btnActionPerformed

    //click nút sửa sản phẩm
    private void SuaSanPham_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuaSanPham_btnActionPerformed
        try {
            if (MaSanPham_txt.getText().equals("") || TenSanPham_txt.getText().equals("") || HangSanXuat_txt.getText().equals("")
                    || GiaNhap_txt.getText().equals("") || GiaBan_txt.getText().equals("") || DonVi_txt.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
            } else {
                String sql = "Update SanPham Set TenSanPham = N'" + TenSanPham_txt.getText() + "', TenLoaiSanPham = N'" + LoaiSanPham_cmb.getSelectedItem().toString() + "',"
                        + "HangSanXuat = N'" + HangSanXuat_txt.getText() + "', DonVi = N'" + DonVi_txt.getText() + "', GiaNhap = '" + GiaNhap_txt.getText() + "', GiaBan = '" + GiaBan_txt.getText() + "'"
                        + "Where MaSanPham = '" + MaSanPham_txt.getText() + "' ";
                boolean execute = cn.ExcuteQueryUpdateDB(sql);
                if (execute) {
                    JOptionPane.showMessageDialog(rootPane, "Sửa sản phẩm thành công!");
                    ResetSanPham_btnActionPerformed(evt);
                }
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_SuaSanPham_btnActionPerformed

    private void GiaNhap_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GiaNhap_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GiaNhap_txtActionPerformed

    private void TenSanPham_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TenSanPham_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TenSanPham_txtActionPerformed

    private void LoaiSanPham_cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoaiSanPham_cmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoaiSanPham_cmbActionPerformed

    private void GiaBan_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GiaBan_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GiaBan_txtActionPerformed

    //Click nút tìm kiếm sản phẩm
    private void SearchSanPham_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchSanPham_btnActionPerformed
        if (SearchSanPham_txt.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Hãy nhập từ khóa bạn muốn tìm kiếm!");
        } else if (SearchTypeSanPham_cmb.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn loại tìm kiếm bạn muốn tìm kiếm!");
        } else {
            try {
                int searchtypeindex = SearchTypeSanPham_cmb.getSelectedIndex();
                System.out.println(searchtypeindex);
                String searchtype = "";
                switch (searchtypeindex) {
                    case 1:
                        searchtype = "MaSanPham";
                        break;
                    case 2:
                        searchtype = "TenSanPham";
                        break;
                    case 3:
                        searchtype = "HangSanXuat";
                        break;
                    default:
                        break;
                }
                int number;
                Vector row = null;
                String sql = "select * from SanPham Where " + searchtype + " LIKE N'%" + SearchSanPham_txt.getText() + "%'";
                ResultSet rs = cn.ExcuteQueryGetTable(sql);
                ResultSetMetaData metadata = rs.getMetaData();
                number = metadata.getColumnCount();
                tb.setRowCount(0);
                int index = 1;
                while (rs.next()) {
                    row = new Vector();
                    row.add(index);
                    index++;
                    for (int i = 1; i <= number; i++) {
                        row.addElement(rs.getString(i));
                    }

                    tb.addRow(row);
                    SanPham_tbl.setModel(tb);

                }
                rs.close();
                JOptionPane.showMessageDialog(rootPane, "Tìm kiếm hoàn tất!");

            } catch (Exception e) {

            }
        }

    }//GEN-LAST:event_SearchSanPham_btnActionPerformed

    //Đổi tab trong menu nhân viên
    private void NhanVien_paneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NhanVien_paneMouseClicked
        int selectedIndex = NhanVien_pane.getSelectedIndex();
        System.out.println(selectedIndex);
        switch (selectedIndex) {
            case 0://Nhân viên
                NhanVienTable_load();
                try {
                    ChucVu_cmb_addItems();
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                SuaNhanVien_btn.setEnabled(false);
                XoaNhanVien_btn.setEnabled(false);
                break;
            case 1://Tài khoản
                TaiKhoanTable_load();
                try {
                    ChucVuTK_cmb_addItems();
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                SuaTaiKhoan_btn.setEnabled(false);
                XoaTaiKhoan_btn.setEnabled(false);
                break;
            case 2://Chức vụ
                ChucVuTable_load();
                SuaChucVu_btn.setEnabled(false);
                XoaChucVu_btn.setEnabled(false);
                break;
        }
    }//GEN-LAST:event_NhanVien_paneMouseClicked

    //Đẩy dữ liệu từ db vào combobox chức vụ nhân viên
    public void ChucVu_cmb_addItems() throws SQLException {
        String sql = "SELECT TenChucVu FROM ChucVu";
        ResultSet rs = cn.ExcuteQueryGetTable(sql);
        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
        while (rs.next()) {
            String value = rs.getString("TenChucVu");
            comboBoxModel.addElement(value);
        }
        ChucVu_cmb.setModel(comboBoxModel);
        rs.close();
    }

    //Đẩy dữ liệu từ db vào combobox chức vụ tài khoản
    public void ChucVuTK_cmb_addItems() throws SQLException {
        String sql = "SELECT TenChucVu FROM ChucVu";
        ResultSet rs = cn.ExcuteQueryGetTable(sql);
        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
        while (rs.next()) {
            String value = rs.getString("TenChucVu");
            comboBoxModel.addElement(value);
        }
        ChucVuTK_cmb.setModel(comboBoxModel);
        rs.close();
    }

    //Load bảng nhân viên
    final String NhanVienTableHeader[] = {"STT", "Mã nhân viên", "Tên nhân viên", "Ngày sinh", "Giới tính", "Chức vụ", "Địa chỉ", "SĐT", "CCCD"};
    final DefaultTableModel NhanVienTable = new DefaultTableModel(NhanVienTableHeader, 0);

    public void NhanVienTable_load() {
        NhanVien_tbl.getTableHeader().setReorderingAllowed(false);
        NhanVien_tbl.setDefaultEditor(Object.class, null);
        //Đẩy mã nhân viên vào textbox
        String getmanhanvien = "select manhanvien_chu, manhanvien_so from Ma";
        ResultSet rssmanhanvien = cn.ExcuteQueryGetTable(getmanhanvien);
        try {
            while (rssmanhanvien.next()) {
                MaNhanVien_chu = rssmanhanvien.getString("manhanvien_chu");
                MaNhanVien_so = rssmanhanvien.getInt("manhanvien_so");
            }
        } catch (SQLException ex) {
            Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
        MaNhanVien_txt.setText(MaNhanVien_chu + MaNhanVien_so);
        try {
            int number;
            Vector row = null;
            String sql = "select * from NhanVien";
            ResultSet rs = cn.ExcuteQueryGetTable(sql);
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            NhanVienTable.setRowCount(0);
            int index = 1;
            while (rs.next()) {
                row = new Vector();
                row.add(index);
                index++;
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }

                NhanVienTable.addRow(row);
                NhanVien_tbl.setModel(NhanVienTable);

            }
            rs.close();

        } catch (Exception e) {

        }
    }

    //Load bảng tài khoản
    final String TaiKhoanTableHeader[] = {"STT", "Tên đăng nhập", "Mật khẩu", "Mã nhân viên", "Quyền"};
    final DefaultTableModel TaiKhoanTable = new DefaultTableModel(TaiKhoanTableHeader, 0);

    public void TaiKhoanTable_load() {
        TaiKhoan_tbl.getTableHeader().setReorderingAllowed(false);
        TaiKhoan_tbl.setDefaultEditor(Object.class, null);
        try {
            int number;
            Vector row = null;
            String sql = "select * from TaiKhoan";
            ResultSet rs = cn.ExcuteQueryGetTable(sql);
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            TaiKhoanTable.setRowCount(0);
            int index = 1;
            while (rs.next()) {
                row = new Vector();
                row.add(index);
                index++;
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }

                TaiKhoanTable.addRow(row);
                TaiKhoan_tbl.setModel(TaiKhoanTable);

            }
            rs.close();

        } catch (Exception e) {

        }
    }

    //Load bảng chức vụ
    final String ChucVuTableHeader[] = {"STT", "Mã chức vụ", "Tên chức vụ"};
    final DefaultTableModel ChucVuTable = new DefaultTableModel(ChucVuTableHeader, 0);

    public void ChucVuTable_load() {
        ChucVu_tbl.getTableHeader().setReorderingAllowed(false);
        ChucVu_tbl.setDefaultEditor(Object.class, null);
        try {
            int number;
            Vector row = null;
            String sql = "select * from ChucVu";
            ResultSet rs = cn.ExcuteQueryGetTable(sql);
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            ChucVuTable.setRowCount(0);
            int index = 1;
            while (rs.next()) {
                row = new Vector();
                row.add(index);
                index++;
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }

                ChucVuTable.addRow(row);
                ChucVu_tbl.setModel(ChucVuTable);

            }
            rs.close();

        } catch (Exception e) {

        }
    }

    //Click nút thêm chức vụ
    private void ThemChucVu_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemChucVu_btnActionPerformed
        if (MaChucVu_txt.getText().equals("") || TenChucVu_txt.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
        } else {
            String sql_check1 = "Select MaChucVu from ChucVu where MaChucVu = N'" + MaChucVu_txt.getText() + "'";
            String sql_check2 = "Select TenChucVu from ChucVu where TenChucVu = N'" + TenChucVu_txt.getText() + "'";
            ResultSet rs1 = cn.ExcuteQueryGetTable(sql_check1);
            ResultSet rs2 = cn.ExcuteQueryGetTable(sql_check2);
            boolean check1 = false;
            boolean check2 = false;//false = chưa trùng
            try {
                if (rs1.next()) {
                    check1 = true; //true = trùng
                }
                if (rs2.next()) {
                    check2 = true;
                }
            } catch (SQLException ex) {
                Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (check1) {
                JOptionPane.showMessageDialog(this, "Mã chức vụ này đã tồn tại!\nLưu ý: Không được nhập trùng mã chức vụ!");
            } else if (check2) {
                JOptionPane.showMessageDialog(this, "Tên chức vụ này đã tồn tại!\nLưu ý: Không được nhập trùng tên chức vụ!");
            } else {
                String sql = "Insert into ChucVu (MaChucVu, TenChucVu) "
                        + "values( N'" + MaChucVu_txt.getText() + "', N'" + TenChucVu_txt.getText() + "' )";
                cn.ExcuteQueryUpdateDB(sql);
                JOptionPane.showMessageDialog(this, "Thêm mới chức vụ thành công!");
                ChucVuTable_load();
                ResetChucVu_btnActionPerformed(evt);
                try {
                    ChucVu_cmb_addItems();
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_ThemChucVu_btnActionPerformed

    //Click nút sửa chức vụ
    private void SuaChucVu_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuaChucVu_btnActionPerformed
        String a = TenChucVu_txt.getText() + "";
        try {
            if (MaChucVu_txt.getText().equals("") || TenChucVu_txt.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
            } else {
                String sql = "Update ChucVu Set TenChucVu = N'" + TenChucVu_txt.getText() + "'"
                        + "Where MaChucVu = N'" + MaChucVu_txt.getText() + "' ";
                String sql2 = "Update NhanVien Set TenChucVu = N'" + TenChucVu_txt.getText() + "'"
                        + "Where TenChucVu = N'" + currentSelectedChucVu + "' ";
                String sql3 = "Update TaiKhoan Set TenChucVu = N'" + TenChucVu_txt.getText() + "'"
                        + "Where TenChucVu = N'" + currentSelectedChucVu + "' ";
                boolean execute = cn.ExcuteQueryUpdateDB(sql);
                boolean execute2 = cn.ExcuteQueryUpdateDB(sql2);
                boolean execute3 = cn.ExcuteQueryUpdateDB(sql3);
                if (execute && execute2 && execute3) {
                    JOptionPane.showMessageDialog(rootPane, "Sửa chức vụ thành công!");
                    ResetChucVu_btnActionPerformed(evt);
                    ChucVu_cmb_addItems();
                }
                //Load lại bảng nhân viên bên dưới vì đã có một chức vụ bị sửa

                String sql4 = "SELECT nv.MaNhanVien, nv.TenNhanVien, cv.TenChucVu\n"
                        + "FROM NhanVien nv\n"
                        + "JOIN ChucVu cv ON nv.TenChucVu = cv.TenChucVu\n"
                        + "WHERE cv.TenChucVu = N'" + a + "';";

                ResultSet rs = cn.ExcuteQueryGetTable(sql4);
                try {
                    int number;
                    Vector row = null;
                    ResultSetMetaData metadata = rs.getMetaData();
                    number = metadata.getColumnCount();
                    NhanVienTheoChucVu.setRowCount(0);
                    int index = 1;

                    while (rs.next()) {

                        row = new Vector();
                        row.add(index);
                        index++;
                        for (int i = 1; i <= number; i++) {
                            row.addElement(rs.getString(i));
                        }

                        NhanVienTheoChucVu.addRow(row);
                        NhanVienTheoChucVu_tbl.setModel(NhanVienTheoChucVu);

                    }

                    rs.close();

                } catch (Exception e) {

                }
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_SuaChucVu_btnActionPerformed

    //Click nút xóa chức vụ
    private void XoaChucVu_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaChucVu_btnActionPerformed
        try {
            String sql = "Delete ChucVu where MaChucVu = '" + MaChucVu_txt.getText() + "' ";
            boolean execute = cn.ExcuteQueryUpdateDB(sql);
            if (execute) {
                JOptionPane.showMessageDialog(rootPane, "Xóa chức vụ thành công!");
                ResetChucVu_btnActionPerformed(evt);
                ChucVu_cmb_addItems();
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_XoaChucVu_btnActionPerformed

    //Click nút reset chức vụ
    private void ResetChucVu_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetChucVu_btnActionPerformed
        MaChucVu_txt.setText("");
        TenChucVu_txt.setText("");

        ChucVuTable_load();
        NhanVienTheoChucVu.setRowCount(0);
        NhanVienTheoChucVu_tbl.setModel(NhanVienTheoChucVu);

        MaChucVu_txt.setEnabled(true);
        MatKhau_txt.setEnabled(true);
        XoaChucVu_btn.setEnabled(false);
        SuaChucVu_btn.setEnabled(false);

    }//GEN-LAST:event_ResetChucVu_btnActionPerformed

    String headerNhanVienTheoChucVu[] = {"STT", "Mã nhân viên", "Tên nhân viên", "Chức vụ"};
    DefaultTableModel NhanVienTheoChucVu = new DefaultTableModel(headerNhanVienTheoChucVu, 0);
    String currentSelectedChucVu;

    //Click một ô trong bảng chức vụ
    private void ChucVu_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChucVu_tblMouseClicked
        SuaChucVu_btn.setEnabled(true);
        XoaChucVu_btn.setEnabled(true);

        int x = DucAnh.mousePressed(evt, ChucVu_tbl);
        System.out.println(x);
        MaChucVu_txt.setText(ChucVu_tbl.getValueAt(x, 1) + "");
        TenChucVu_txt.setText(ChucVu_tbl.getValueAt(x, 2) + "");
        currentSelectedChucVu = ChucVu_tbl.getValueAt(x, 2) + "";
        System.out.println(currentSelectedChucVu);
        MaChucVu_txt.setEnabled(false);

        //Đổ dữ liệu lên bảng nhân viên bên dưới theo chức vụ
        String a = ChucVu_tbl.getValueAt(x, 2) + "";
        String sql = "SELECT nv.MaNhanVien, nv.TenNhanVien, cv.TenChucVu\n"
                + "FROM NhanVien nv\n"
                + "JOIN ChucVu cv ON nv.TenChucVu = cv.TenChucVu\n"
                + "WHERE cv.TenChucVu = N'" + a + "';";

        ResultSet rs = cn.ExcuteQueryGetTable(sql);
        //Load bảng nhân viên bên dưới theo chức vụ

        try {
            int number;
            Vector row = null;
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            NhanVienTheoChucVu.setRowCount(0);
            int index = 1;

            while (rs.next()) {

                row = new Vector();
                row.add(index);
                index++;
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }

                NhanVienTheoChucVu.addRow(row);
                NhanVienTheoChucVu_tbl.setModel(NhanVienTheoChucVu);

            }

            rs.close();

        } catch (Exception e) {

        }
    }//GEN-LAST:event_ChucVu_tblMouseClicked

    //Click nút reset nhân viên
    private void ResetNhanVien_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetNhanVien_btnActionPerformed
        MaNhanVien_txt.setText(MaNhanVien_chu + MaNhanVien_so);
        TenNhanVien_txt.setText("");
        NgaySinhNhanVien_txt.setText("");
        GioiTinh_cmb.setSelectedIndex(0);
        ChucVu_cmb.setSelectedIndex(0);
        DiaChiNhanVien_txt.setText("");
        SDTType_cmb.setSelectedIndex(0);
        SDTNhanVien_txt.setText("");
        CCCDNhanVien_txt.setText("");
        NhanVienTable_load();

        SearchNhanVien_txt.setText("");
        SearchTypeNhanVien_cmb.setSelectedIndex(0);
        XoaKhachHang_btn.setEnabled(false);
        SuaKhachHang_btn.setEnabled(false);
    }//GEN-LAST:event_ResetNhanVien_btnActionPerformed

    //Click nút thêm nhân viên
    private void ThemNhanVien_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemNhanVien_btnActionPerformed
        if (MaNhanVien_txt.getText().equals("") || TenNhanVien_txt.getText().equals("") || NgaySinhNhanVien_txt.getText().equals("")
                || CCCDNhanVien_txt.getText().equals("") || SDTNhanVien_txt.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
        } else {
            String sql_check_pk = "Select MaNhanVien from NhanVien where MaNhanVien = '" + MaNhanVien_txt.getText() + "'";
            ResultSet rs = cn.ExcuteQueryGetTable(sql_check_pk);
            boolean check = false; //false = chưa trùng
            try {
                if (rs.next()) {
                    check = true; //true = trùng
                }
            } catch (SQLException ex) {
                Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (check) {
                JOptionPane.showMessageDialog(this, "Mã nhân viên này đã tồn tại!\nLưu ý: Không được nhập trùng nhân viên!");
            } else {
                try {
                    if (DucAnh.isValidDate(NgaySinhNhanVien_txt.getText()) == false) {
                        JOptionPane.showMessageDialog(rootPane, "Ngày sinh không hợp lệ\n"
                                + "Lưu ý: Ngày sinh hợp lệ phải có kiểu: yyyy-mm-dd (năm-tháng-ngày) và phải tồn tại\n"
                                + "Bạn hãy nhập lại ngày sinh!");
                        return;
                    }
                    if (DucAnh.checkString(SDTNhanVien_txt.getText(), 9) == false) {
                        JOptionPane.showMessageDialog(rootPane, "SĐT không hợp lệ\n"
                                + "Số điện thoại phải có 9 chữ số và không chứa chữ cái nào\n"
                                + "Bạn hãy nhập lại SĐT!");
                        return;
                    }
                    if (DucAnh.checkString(CCCDNhanVien_txt.getText(), 12) == false) {
                        JOptionPane.showMessageDialog(rootPane, "CCCD không hợp lệ\n"
                                + "CCCD phải có 12 chữ số và không chứa chữ cái nào\n"
                                + "Bạn hãy nhập lại CCCD!");
                        return;
                    }
                    String SDTType = "";
                    switch (SDTType_cmb.getSelectedIndex()) {
                        case 0:
                            SDTType = "+84";
                            break;
                        case 1:
                            SDTType = "+44";
                            break;
                        case 2:
                            SDTType = "+49";
                            break;
                        case 3:
                            SDTType = "+82";
                            break;
                        case 4:
                            SDTType = "+86";
                            break;
                    }
                    String sql = "Insert into NhanVien (MaNhanVien, TenNhanVien, NgaySinhNhanVien, GioiTinhNhanVien, TenChucVu, DiaChi, SDTNhanVien, CCCDNhanVien) "
                            + "values( N'" + MaNhanVien_txt.getText() + "', N'" + TenNhanVien_txt.getText() + "',  N'" + NgaySinhNhanVien_txt.getText() + "' , "
                            + "N'" + GioiTinh_cmb.getSelectedItem().toString() + "', N'" + ChucVu_cmb.getSelectedItem().toString() + "',N'" + DiaChiNhanVien_txt.getText() + "' , N'" + SDTType + SDTNhanVien_txt.getText() + "', N'" + CCCDNhanVien_txt.getText() + "' )";
                    cn.ExcuteQueryUpdateDB(sql);
                } catch (Exception ex) {

                    return;
                }
                JOptionPane.showMessageDialog(this, "Thêm mới nhân viên thành công!");
                NhanVienTable_load();
                ResetNhanVien_btnActionPerformed(evt);

                //Tăng mã nhân viên lên 1 đơn vị
                String increaseMaNhanVien_so = "UPDATE Ma SET manhanvien_so = manhanvien_so + 1";
                boolean execute = cn.ExcuteQueryUpdateDB(increaseMaNhanVien_so);
                String getmanhanvien = "select manhanvien_chu, manhanvien_so from Ma";
                ResultSet rssmanhanvien = cn.ExcuteQueryGetTable(getmanhanvien);
                try {
                    while (rssmanhanvien.next()) {
                        MaNhanVien_chu = rssmanhanvien.getString("manhanvien_chu");
                        MaNhanVien_so = rssmanhanvien.getInt("manhanvien_so");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                MaNhanVien_txt.setText(MaNhanVien_chu + MaNhanVien_so);
            }
        }
    }//GEN-LAST:event_ThemNhanVien_btnActionPerformed

    //Click nút sửa nhân viên
    private void SuaNhanVien_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuaNhanVien_btnActionPerformed
        try {
            if (MaNhanVien_txt.getText().equals("") || TenNhanVien_txt.getText().equals("") || NgaySinhNhanVien_txt.getText().equals("")
                    || CCCDNhanVien_txt.getText().equals("") || SDTNhanVien_txt.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
            } else {
                if (DucAnh.isValidDate(NgaySinhNhanVien_txt.getText()) == false) {
                    JOptionPane.showMessageDialog(rootPane, "Ngày sinh không hợp lệ\n"
                            + "Lưu ý: Ngày sinh hợp lệ phải có kiểu: yyyy-mm-dd (năm-tháng-ngày) và phải tồn tại\n"
                            + "Bạn hãy nhập lại ngày sinh!");
                    return;
                }
                if (DucAnh.checkString(SDTNhanVien_txt.getText(), 9) == false) {
                    JOptionPane.showMessageDialog(rootPane, "SĐT không hợp lệ\n"
                            + "Số điện thoại phải có 9 chữ số và không chứa chữ cái nào\n"
                            + "Bạn hãy nhập lại SĐT!");
                    return;
                }
                if (DucAnh.checkString(CCCDNhanVien_txt.getText(), 12) == false) {
                    JOptionPane.showMessageDialog(rootPane, "CCCD không hợp lệ\n"
                            + "CCCD phải có 12 chữ số và không chứa chữ cái nào\n"
                            + "Bạn hãy nhập lại CCCD!");
                    return;
                }
                String SDTType = "";
                switch (SDTType_cmb.getSelectedIndex()) {
                    case 0:
                        SDTType = "+84";
                        break;
                    case 1:
                        SDTType = "+44";
                        break;
                    case 2:
                        SDTType = "+49";
                        break;
                    case 3:
                        SDTType = "+82";
                        break;
                    case 4:
                        SDTType = "+86";
                        break;
                }

                String sql = "Update NhanVien Set TenNhanVien = N'" + TenNhanVien_txt.getText() + "', NgaySinhNhanVien = N'" + NgaySinhNhanVien_txt.getText() + "',"
                        + "GioiTinhNhanVien = N'" + GioiTinh_cmb.getSelectedItem().toString() + "', TenChucVu = N'" + ChucVu_cmb.getSelectedItem().toString() + "', DiaChi = N'" + DiaChiNhanVien_txt.getText() + "',"
                        + " SDTNhanVien = N'" + SDTType + SDTNhanVien_txt.getText() + "', CCCDNhanVien = N'" + CCCDNhanVien_txt.getText() + "' "
                        + "Where MaNhanVien = '" + MaNhanVien_txt.getText() + "' ";
                boolean execute = cn.ExcuteQueryUpdateDB(sql);
                if (execute) {
                    JOptionPane.showMessageDialog(rootPane, "Sửa nhân viên thành công!");
                    ResetNhanVien_btnActionPerformed(evt);
                }
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_SuaNhanVien_btnActionPerformed

    //Click nút xóa nhân viên
    private void XoaNhanVien_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaNhanVien_btnActionPerformed
        try {
            String sql = "Delete NhanVien where MaNhanVien = '" + MaNhanVien_txt.getText() + "' ";
            boolean execute = cn.ExcuteQueryUpdateDB(sql);
            if (execute) {
                JOptionPane.showMessageDialog(rootPane, "Xóa nhân viên thành công!");
                ResetNhanVien_btnActionPerformed(evt);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_XoaNhanVien_btnActionPerformed

    //Click một ô trong bảng nhân viên
    private void NhanVien_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NhanVien_tblMouseClicked
        SuaNhanVien_btn.setEnabled(true);
        XoaNhanVien_btn.setEnabled(true);

        int x = DucAnh.mousePressed(evt, NhanVien_tbl);

        MaNhanVien_txt.setText(NhanVien_tbl.getValueAt(x, 1) + "");
        TenNhanVien_txt.setText(NhanVien_tbl.getValueAt(x, 2) + "");
        NgaySinhNhanVien_txt.setText(NhanVien_tbl.getValueAt(x, 3) + "");
        GioiTinh_cmb.setSelectedItem(NhanVien_tbl.getValueAt(x, 4) + "");
        ChucVu_cmb.setSelectedItem(NhanVien_tbl.getValueAt(x, 5) + "");
        DiaChiNhanVien_txt.setText(NhanVien_tbl.getValueAt(x, 6) + "");
        String SDTType = NhanVien_tbl.getValueAt(x, 7) + "";
        SDTType = SDTType.substring(0, 3);
        switch (SDTType) {
            case ("+84"):
                SDTType_cmb.setSelectedIndex(0);
                break;
            case ("+44"):
                SDTType_cmb.setSelectedIndex(1);
                break;
            case ("+49"):
                SDTType_cmb.setSelectedIndex(2);
                break;
            case ("+82"):
                SDTType_cmb.setSelectedIndex(3);
                break;
            case ("+86"):
                SDTType_cmb.setSelectedIndex(4);
                break;
        }
        String SDT = NhanVien_tbl.getValueAt(x, 7) + "";
        SDT = SDT.substring(3, 12);
        SDTNhanVien_txt.setText(SDT + "");
        CCCDNhanVien_txt.setText(NhanVien_tbl.getValueAt(x, 8) + "");
        MaNhanVien_txt.setEnabled(false);
    }//GEN-LAST:event_NhanVien_tblMouseClicked

    private void SoLuongCTPN_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SoLuongCTPN_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SoLuongCTPN_txtActionPerformed

    //Load bảng phiếu nhập kho
    final String PhieuNhapHeader[] = {"STT", "Mã Phiếu Nhập", "Nhân viên", "Tổng tiền", "Ngày Lập Phiếu"};
    final DefaultTableModel PhieuNhap = new DefaultTableModel(PhieuNhapHeader, 0);

    public void PhieuNhapTable_load() {
        PhieuNhap_tbl.getTableHeader().setReorderingAllowed(false);
        PhieuNhap_tbl.setDefaultEditor(Object.class, null);

        NgayNhap_txt.setText(DucAnh.currentDate());

        //Đẩy mã phiếu nhập kho vào textbox
        String getmaphieunhap = "select maphieunhap_chu, maphieunhap_so from Ma";
        ResultSet rssmaphieunhap = cn.ExcuteQueryGetTable(getmaphieunhap);
        try {
            while (rssmaphieunhap.next()) {
                MaPhieuNhap_chu = rssmaphieunhap.getString("maphieunhap_chu");
                MaPhieuNhap_so = rssmaphieunhap.getInt("maphieunhap_so");
            }
        } catch (SQLException ex) {
            Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
        MaPhieuNhap_txt.setText(MaPhieuNhap_chu + MaPhieuNhap_so);

        try {
            //Tính và đẩy dữ liệu vào cột giá nhập cho chi tiết phiếu nhập
            String sql2 = "UPDATE ChiTietPhieuNhap\n"
                    + "SET ThanhTienNhap = sp.GiaNhap * ct.SoLuongNhap\n"
                    + "FROM ChiTietPhieuNhap ct\n"
                    + "JOIN SanPham sp ON ct.TenSanPham = sp.TenSanPham\n"
                    + "JOIN PhieuNhap pn ON ct.MaPhieuNhap = pn.MaPhieuNhap\n"
                    + "WHERE pn.MaPhieuNhap = ct.MaPhieuNhap;";
            if (cn.ExcuteQueryUpdateDB(sql2)) {
                System.out.println("Da tinh het thanh tien cua cac chi tiet phieu nhap");
            }
            //Update tổng tiền từ các CTPN vào bảng Phiếu nhập
            String tongTienCalc = "UPDATE PhieuNhap\n"
                    + "SET TongTienNhap = (\n"
                    + "    SELECT SUM(ThanhTienNhap)\n"
                    + "    FROM ChiTietPhieuNhap\n"
                    + "    WHERE ChiTietPhieuNhap.MaPhieuNhap = PhieuNhap.MaPhieuNhap\n"
                    + ")\n"
                    + "WHERE EXISTS (\n"
                    + "    SELECT 1\n"
                    + "    FROM ChiTietPhieuNhap\n"
                    + "    WHERE ChiTietPhieuNhap.MaPhieuNhap = PhieuNhap.MaPhieuNhap\n"
                    + ")";
            if (cn.ExcuteQueryUpdateDB(tongTienCalc)) {
                System.out.println("Đã tính tổng tiền các phiếu nhập");
            }

            MaPhieuNhap_cmb_addItems();
            SanPhamCTPN_cmb_addItems();

            int number;
            Vector row = null;
            String sql = "select * from PhieuNhap";
            ResultSet rs = cn.ExcuteQueryGetTable(sql);
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            PhieuNhap.setRowCount(0);
            int index = 1;
            while (rs.next()) {
                row = new Vector();
                row.add(index);
                index++;
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }

                PhieuNhap.addRow(row);
                PhieuNhap_tbl.setModel(PhieuNhap);

            }
            rs.close();

        } catch (Exception e) {

        }
    }

    String headerChiTietPhieuNhap[] = {"STT", "Mã CTPN", "Mã phiếu nhập", "Sản phẩm", "Số lượng", "Đơn vị tính", "Thành tiền"};
    DefaultTableModel ChiTietPhieuNhap = new DefaultTableModel(headerChiTietPhieuNhap, 0);

    //Load bảng CTPN
    public void CTPNTable_load() {
        ChiTietPhieuNhap_tbl.getTableHeader().setReorderingAllowed(false);
        ChiTietPhieuNhap_tbl.setDefaultEditor(Object.class, null);

        //Đẩy mã CTPN vào textbox
        String getmactpn = "select mactpn_chu, mactpn_so from Ma";
        ResultSet rssmactpn = cn.ExcuteQueryGetTable(getmactpn);
        try {
            while (rssmactpn.next()) {
                Mactpn_chu = rssmactpn.getString("mactpn_chu");
                Mactpn_so = rssmactpn.getInt("mactpn_so");
            }
        } catch (SQLException ex) {
            Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
        MaCTPN_txt.setText(Mactpn_chu + Mactpn_so);

        try {
            //Tính và đẩy dữ liệu vào cột giá nhập cho chi tiết phiếu nhập
            String sql2 = "UPDATE ChiTietPhieuNhap\n"
                    + "SET ThanhTienNhap = sp.GiaNhap * ct.SoLuongNhap\n"
                    + "FROM ChiTietPhieuNhap ct\n"
                    + "JOIN SanPham sp ON ct.TenSanPham = sp.TenSanPham\n"
                    + "JOIN PhieuNhap pn ON ct.MaPhieuNhap = pn.MaPhieuNhap\n"
                    + "WHERE pn.MaPhieuNhap = ct.MaPhieuNhap;";
            if (cn.ExcuteQueryUpdateDB(sql2)) {
                System.out.println("Da tinh het thanh tien cua cac chi tiet phieu nhap");
            }
            //Update tổng tiền từ các CTPN vào bảng Phiếu nhập
            String tongTienCalc = "UPDATE PhieuNhap\n"
                    + "SET TongTienNhap = (\n"
                    + "    SELECT SUM(ThanhTienNhap)\n"
                    + "    FROM ChiTietPhieuNhap\n"
                    + "    WHERE ChiTietPhieuNhap.MaPhieuNhap = PhieuNhap.MaPhieuNhap\n"
                    + ")\n"
                    + "WHERE EXISTS (\n"
                    + "    SELECT 1\n"
                    + "    FROM ChiTietPhieuNhap\n"
                    + "    WHERE ChiTietPhieuNhap.MaPhieuNhap = PhieuNhap.MaPhieuNhap\n"
                    + ")";
            if (cn.ExcuteQueryUpdateDB(tongTienCalc)) {
                System.out.println("Đã tính tổng tiền các phiếu nhập");
            }

            MaPhieuNhap_cmb_addItems();
            SanPhamCTPN_cmb_addItems();

            int number;
            Vector row = null;
            String sql = "SELECT ct.MaChiTietPhieuNhap, ct.MaPhieuNhap, ct.TenSanPham, ct.SoLuongNhap, sp.DonVi, ct.ThanhTienNhap\n"
                    + "FROM ChiTietPhieuNhap ct\n"
                    + "JOIN PhieuNhap pn ON ct.MaPhieuNhap = pn.MaPhieuNhap\n"
                    + "JOIN SanPham sp ON ct.TenSanPham = sp.TenSanPham\n";
            ResultSet rs = cn.ExcuteQueryGetTable(sql);
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            ChiTietPhieuNhap.setRowCount(0);
            int index = 1;
            while (rs.next()) {
                row = new Vector();
                row.add(index);
                index++;
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }

                ChiTietPhieuNhap.addRow(row);
                ChiTietPhieuNhap_tbl.setModel(ChiTietPhieuNhap);

            }
            rs.close();

        } catch (Exception e) {

        }
    }

    //Đẩy dữ liệu từ db vào combobox nhân viên trong tab phiếu nhập 
    public void NhanVien_cmb_addItems() throws SQLException {
        String sql = "SELECT TenNhanVien FROM NhanVien";
        ResultSet rs = cn.ExcuteQueryGetTable(sql);
        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
        while (rs.next()) {
            String value = rs.getString("TenNhanVien");
            comboBoxModel.addElement(value);
        }
        NhanVien_cmb.setModel(comboBoxModel);
        rs.close();
    }

    //Click nút thêm phiếu nhập
    private void ThemPhieuNhap_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemPhieuNhap_btnActionPerformed
        if (MaPhieuNhap_txt.getText().equals("") || NgayNhap_txt.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
        } else {
            String sql_check1 = "Select MaPhieuNhap from PhieuNhap where MaPhieuNhap = N'" + MaPhieuNhap_txt.getText() + "'";
            ResultSet rs1 = cn.ExcuteQueryGetTable(sql_check1);
            boolean check1 = false;
            try {
                if (rs1.next()) {
                    check1 = true; //true = trùng
                }
            } catch (SQLException ex) {
                Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (check1) {
                JOptionPane.showMessageDialog(this, "Mã phiếu nhập này đã tồn tại!\nLưu ý: Không được nhập trùng mã phiếu nhập!");
            } else {
                if (DucAnh.isValidDate(NgayNhap_txt.getText()) == false) {
                    JOptionPane.showMessageDialog(rootPane, "Ngày nhập không hợp lệ\n"
                            + "Lưu ý: Ngày nhập hợp lệ phải có kiểu: yyyy-mm-dd (năm-tháng-ngày) và phải tồn tại\n"
                            + "Bạn hãy nhập lại ngày nhập!");
                    return;
                }
                String sql = "Insert into PhieuNhap (MaPhieuNhap, TenNhanVien, NgayNhap) "
                        + "values( N'" + MaPhieuNhap_txt.getText() + "', N'" + NhanVien_cmb.getSelectedItem().toString() + "', "
                        + "N'" + NgayNhap_txt.getText() + "' )";
                cn.ExcuteQueryUpdateDB(sql);
                JOptionPane.showMessageDialog(this, "Thêm mới phiếu nhập thành công!");
                PhieuNhapTable_load();
                ResetPhieuNhap_btnActionPerformed(evt);

                //Tăng mã phiếu nhập lên 1 đơn vị
                String increaseMaPhieuNhap = "UPDATE Ma SET maphieunhap_so = maphieunhap_so + 1";
                boolean execute = cn.ExcuteQueryUpdateDB(increaseMaPhieuNhap);
                String getmaphieunhap = "select maphieunhap_chu, maphieunhap_so from Ma";
                ResultSet rssmaphieunhap = cn.ExcuteQueryGetTable(getmaphieunhap);
                try {
                    while (rssmaphieunhap.next()) {
                        MaPhieuNhap_chu = rssmaphieunhap.getString("maphieunhap_chu");
                        MaPhieuNhap_so = rssmaphieunhap.getInt("maphieunhap_so");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                MaPhieuNhap_txt.setText(MaPhieuNhap_chu + MaPhieuNhap_so);

            }
        }
    }//GEN-LAST:event_ThemPhieuNhap_btnActionPerformed

    //Click nút sửa phiếu nhập
    private void SuaPhieuNhap_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuaPhieuNhap_btnActionPerformed
        if (DucAnh.isValidDate(NgayNhap_txt.getText()) == false) {
            JOptionPane.showMessageDialog(rootPane, "Ngày nhập không hợp lệ\n"
                    + "Lưu ý: Ngày nhập hợp lệ phải có kiểu: yyyy-mm-dd (năm-tháng-ngày) và phải tồn tại\n"
                    + "Bạn hãy nhập lại ngày nhập!");
            return;
        }
        String sql = "Update PhieuNhap Set TenNhanVien = N'" + NhanVien_cmb.getSelectedItem().toString() + "', NgayNhap = N'" + NgayNhap_txt.getText() + "' \n"
                + "WHERE MaPhieuNhap = N'" + MaPhieuNhap_txt.getText() + "' ";
        cn.ExcuteQueryUpdateDB(sql);
        JOptionPane.showMessageDialog(this, "Sửa phiếu nhập thành công!");
        PhieuNhapTable_load();
        ResetPhieuNhap_btnActionPerformed(evt);
    }//GEN-LAST:event_SuaPhieuNhap_btnActionPerformed

    //Click một ô trong bảng phiếu nhập
    private void PhieuNhap_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PhieuNhap_tblMouseClicked
        SuaPhieuNhap_btn.setEnabled(true);

        int x = DucAnh.mousePressed(evt, PhieuNhap_tbl);

        MaPhieuNhap_txt.setText(PhieuNhap_tbl.getValueAt(x, 1) + "");
        NhanVien_cmb.setSelectedItem(PhieuNhap_tbl.getValueAt(x, 2) + "");
        NgayNhap_txt.setText(PhieuNhap_tbl.getValueAt(x, 4) + "");

        MaPhieuNhap_txt.setEnabled(false);

        String a = PhieuNhap_tbl.getValueAt(x, 1) + "";

        //Đổ dữ liệu lên bảng chi tiết phiếu nhập bên dưới theo mã phiếu nhập
        String sql = "SELECT ct.MaChiTietPhieuNhap, ct.MaPhieuNhap, ct.TenSanPham, ct.SoLuongNhap, sp.DonVi, ct.ThanhTienNhap\n"
                + "FROM ChiTietPhieuNhap ct\n"
                + "JOIN PhieuNhap pn ON ct.MaPhieuNhap = pn.MaPhieuNhap\n"
                + "JOIN SanPham sp ON ct.TenSanPham = sp.TenSanPham\n"
                + "WHERE pn.MaPhieuNhap = N'" + a + "' \n";

        ResultSet rs = cn.ExcuteQueryGetTable(sql);

        String tongTienCalc = "";
        //Load bảng chi tiết phiếu nhập bên dưới theo mã phiếu nhập

        try {
            int number;
            Vector row = null;
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            ChiTietPhieuNhap.setRowCount(0);
            int index = 1;

            while (rs.next()) {

                row = new Vector();
                row.add(index);
                index++;
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }

                ChiTietPhieuNhap.addRow(row);
                ChiTietPhieuNhap_tbl.setModel(ChiTietPhieuNhap);

            }

            rs.close();

        } catch (Exception e) {

        }
    }//GEN-LAST:event_PhieuNhap_tblMouseClicked

    //Đẩy dữ liệu vào combobox mã phiếu nhập trong CTPN
    public void MaPhieuNhap_cmb_addItems() throws SQLException {
        String sql = "SELECT MaPhieuNhap FROM PhieuNhap";
        ResultSet rs = cn.ExcuteQueryGetTable(sql);
        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
        while (rs.next()) {
            String value = rs.getString("MaPhieuNhap");
            comboBoxModel.addElement(value);
        }
        MaPhieuNhap_cmb.setModel(comboBoxModel);
        rs.close();
    }

    //Đẩy dữ liệu vào combobox sản phẩm trong CTPN
    public void SanPhamCTPN_cmb_addItems() throws SQLException {
        String sql = "SELECT TenSanPham FROM SanPham";
        ResultSet rs = cn.ExcuteQueryGetTable(sql);
        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
        while (rs.next()) {
            String value = rs.getString("TenSanPham");
            comboBoxModel.addElement(value);
        }
        SanPhamCTPN_cmb.setModel(comboBoxModel);
        rs.close();
    }

    //Click nút reset chi tiết phiếu nhập
    private void ResetCTPN_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetCTPN_btnActionPerformed
        MaCTPN_txt.setText(Mactpn_chu + Mactpn_so);
        MaPhieuNhap_cmb.setSelectedIndex(0);
        SanPhamCTPN_cmb.setSelectedIndex(0);
        SoLuongCTPN_txt.setText("");

        PhieuNhapTable_load();
        CTPNTable_load();

        MaPhieuNhap_cmb.setEnabled(true);
        SuaCTPN_btn.setEnabled(false);
        XoaCTPN_btn.setEnabled(false);
    }//GEN-LAST:event_ResetCTPN_btnActionPerformed

    //Click nút thêm CTPN
    private void ThemCTPN_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemCTPN_btnActionPerformed
        if (MaCTPN_txt.getText().equals("") || SoLuongCTPN_txt.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
        } else {
            String sql_check1 = "Select MaChiTietPhieuNhap from ChiTietPhieuNhap where MaChiTietPhieuNhap = N'" + MaCTPN_txt.getText() + "'";
            ResultSet rs1 = cn.ExcuteQueryGetTable(sql_check1);
            boolean check1 = false;
            try {
                if (rs1.next()) {
                    check1 = true; //true = trùng
                }
            } catch (SQLException ex) {
                Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (check1) {
                JOptionPane.showMessageDialog(this, "Mã chi tiết phiếu nhập này đã tồn tại!\nLưu ý: Không được nhập trùng mã chi tiết phiếu nhập!");
            } else {
                if (DucAnh.checkString2(SoLuongCTPN_txt.getText(), 3) == false) {
                    JOptionPane.showMessageDialog(rootPane, "Số lượng nhập không hợp lệ!\n"
                            + "Lưu ý: Số lượng nhập phải là số dương và bé hơn 1000!");
                    SoLuongCTPN_txt.setText("");
                    return;
                }
                String sql = "Insert into ChiTietPhieuNhap (MaChiTietPhieuNhap, MaPhieuNhap, TenSanPham, SoLuongNhap) "
                        + "values( N'" + MaCTPN_txt.getText() + "', N'" + MaPhieuNhap_cmb.getSelectedItem().toString() + "', "
                        + "N'" + SanPhamCTPN_cmb.getSelectedItem().toString() + "', N'" + SoLuongCTPN_txt.getText() + "' )";
                cn.ExcuteQueryUpdateDB(sql);
                JOptionPane.showMessageDialog(this, "Thêm mới chi tiết phiếu nhập thành công!");
                CTPNTable_load();
                ResetCTPN_btnActionPerformed(evt);

                //Tăng mã ctpn lên 1 đơn vị
                String increaseMactpn = "UPDATE Ma SET mactpn_so = mactpn_so + 1";
                boolean execute = cn.ExcuteQueryUpdateDB(increaseMactpn);
                String getmactpn = "select mactpn_chu, mactpn_so from Ma";
                ResultSet rssmactpn = cn.ExcuteQueryGetTable(getmactpn);
                try {
                    while (rssmactpn.next()) {
                        Mactpn_chu = rssmactpn.getString("mactpn_chu");
                        Mactpn_so = rssmactpn.getInt("mactpn_so");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
                }
                MaCTPN_txt.setText(Mactpn_chu + Mactpn_so);

            }
        }
    }//GEN-LAST:event_ThemCTPN_btnActionPerformed

    //Click một ô trong bảng chi tiết phiếu nhập
    private void ChiTietPhieuNhap_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChiTietPhieuNhap_tblMouseClicked
        SuaCTPN_btn.setEnabled(true);
        XoaCTPN_btn.setEnabled(true);

        int x = DucAnh.mousePressed(evt, ChiTietPhieuNhap_tbl);

        MaCTPN_txt.setText(ChiTietPhieuNhap_tbl.getValueAt(x, 1) + "");
        MaPhieuNhap_cmb.setSelectedItem(ChiTietPhieuNhap_tbl.getValueAt(x, 2) + "");
        SanPhamCTPN_cmb.setSelectedItem(ChiTietPhieuNhap_tbl.getValueAt(x, 3) + "");
        SoLuongCTPN_txt.setText(ChiTietPhieuNhap_tbl.getValueAt(x, 4) + "");

        MaCTPN_txt.setEnabled(false);
        MaPhieuNhap_cmb.setEnabled(false);
    }//GEN-LAST:event_ChiTietPhieuNhap_tblMouseClicked

    //Click nút xóa chi tiết phiếu nhập
    private void XoaCTPN_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaCTPN_btnActionPerformed
        try {
            String sql2 = "Delete ChiTietPhieuNhap where MaChiTietPhieuNhap = N'" + MaCTPN_txt.getText() + "' ";
            boolean execute2 = cn.ExcuteQueryUpdateDB(sql2);
            if (execute2) {
                JOptionPane.showMessageDialog(rootPane, "Xóa chi tiết phiếu nhập thành công!");
                //Update tổng tiền từ các CTPN vào bảng Phiếu nhập
                String tongTienCalc = "UPDATE PhieuNhap\n"
                        + "SET TongTienNhap = (\n"
                        + "    SELECT SUM(ThanhTienNhap)\n"
                        + "    FROM ChiTietPhieuNhap\n"
                        + "    WHERE ChiTietPhieuNhap.MaPhieuNhap = PhieuNhap.MaPhieuNhap\n"
                        + ")\n"
                        + "WHERE EXISTS (\n"
                        + "    SELECT 1\n"
                        + "    FROM ChiTietPhieuNhap\n"
                        + "    WHERE ChiTietPhieuNhap.MaPhieuNhap = PhieuNhap.MaPhieuNhap\n"
                        + ")";
                if (cn.ExcuteQueryUpdateDB(tongTienCalc)) {
                    System.out.println("Đã tính tổng tiền các phiếu nhập");
                }
                ResetPhieuNhap_btnActionPerformed(evt);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_XoaCTPN_btnActionPerformed

    private void TenNV_cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TenNV_cmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TenNV_cmbActionPerformed

    //Click một ô trong bảng phiếu xuất
    private void PhieuXuatKho_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PhieuXuatKho_tblMouseClicked
        SuaPXK_btn.setEnabled(true);

        int x = DucAnh.mousePressed(evt, PhieuXuatKho_tbl);

        MaPhieuXuat.setText(PhieuXuatKho_tbl.getValueAt(x, 1) + "");
        TenKH_cmb.setSelectedItem(PhieuXuatKho_tbl.getValueAt(x, 2) + "");
        TenNV_cmb.setSelectedItem(PhieuXuatKho_tbl.getValueAt(x, 3));
        NgayLap.setText(PhieuXuatKho_tbl.getValueAt(x, 4).toString() + "");

        MaPhieuXuat.setEnabled(false);

        String a = PhieuXuatKho_tbl.getValueAt(x, 1) + "";

        //Đổ dữ liệu lên bảng chi tiết phiếu xuất bên dưới theo mã phiếu xuất
        String sql = "SELECT ct.MaChiTietPhieuXuat, ct.MaPhieuXuat, ct.TenSanPham, ct.SoLuongXuat, sp.DonVi, ct.ThanhTienXuat\n"
                + "FROM ChiTietPhieuXuat ct\n"
                + "JOIN PhieuXuat px ON ct.MaPhieuXuat = px.MaPhieuXuat\n"
                + "JOIN SanPham sp ON ct.TenSanPham = sp.TenSanPham\n"
                + "WHERE px.MaPhieuXuat = N'" + a + "' \n";

        ResultSet rs = cn.ExcuteQueryGetTable(sql);

        String tongTienCalc = "";
        //Load bảng chi tiết phiếu xuất bên dưới theo mã phiếu xuất

        try {
            int number;
            Vector row = null;
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            tbctpx.setRowCount(0);
            int index = 1;

            while (rs.next()) {

                row = new Vector();
                row.add(index);
                index++;
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }

                tbctpx.addRow(row);
                ChiTiet_tb.setModel(tbctpx);

            }

            rs.close();

        } catch (Exception e) {

        }
    }//GEN-LAST:event_PhieuXuatKho_tblMouseClicked

    //Click nút thêm tài khoản
    private void ThemTaiKhoan_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemTaiKhoan_btnActionPerformed
        if (TenDangNhap_txt.getText().equals("") || MaNhanVienTK_txt.getText().equals("") || MatKhau_txt.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu!");
        } else {
            String sql_check1 = "Select TenDangNhap from TaiKhoan where TenDangNhap = N'" + TenDangNhap_txt.getText() + "'";
            String sql_check2 = "Select MaNhanVien from TaiKhoan where MaNhanVien = N'" + MaNhanVienTK_txt.getText() + "'";
            String sql_check3 = "Select MaNhanVien from NhanVien where MaNhanVien = N'" + MaNhanVienTK_txt.getText() + "'";
            ResultSet rs1 = cn.ExcuteQueryGetTable(sql_check1);
            ResultSet rs2 = cn.ExcuteQueryGetTable(sql_check2);
            ResultSet rs3 = cn.ExcuteQueryGetTable(sql_check3);
            boolean check1 = false;
            boolean check2 = false;//false = chưa trùng
            boolean check3 = false;
            try {
                if (rs1.next()) {
                    check1 = true; //true = trùng
                }
                if (rs2.next()) {
                    check2 = true;
                }
                if (rs3.next()) {
                    check3 = true;
                }
            } catch (SQLException ex) {
                Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (check1) {
                JOptionPane.showMessageDialog(this, "Tên đăng nhập này đã tồn tại!\nLưu ý: Không được nhập trùng tên đăng nhập!");
            } else if (check2) {
                JOptionPane.showMessageDialog(this, "Tài khoản của mã nhân viên này đã tồn tại!\nLưu ý: Không được nhập trùng mã nhân viên!");
            } else if (check3 == false) {
                JOptionPane.showMessageDialog(rootPane, "Không có nhân viên nào mang mã nhân viên này\nLưu ý: Phải nhập đúng mã nhân viên!");
            } else {
                String sql = "Insert into TaiKhoan(TenDangNhap, MatKhau, MaNhanVien, TenChucVu) \n"
                        + "values( N'" + TenDangNhap_txt.getText() + "', N'" + MatKhau_txt.getText() + "',"
                        + "N'" + MaNhanVienTK_txt.getText() + "', N'" + ChucVuTK_cmb.getSelectedItem().toString() + "' )";
                cn.ExcuteQueryUpdateDB(sql);
                JOptionPane.showMessageDialog(this, "Thêm mới tài khoản thành công!");
                TaiKhoanTable_load();
                ResetTaiKhoan_btnActionPerformed(evt);

            }
        }
    }//GEN-LAST:event_ThemTaiKhoan_btnActionPerformed

    //Click nút reset tài khoản
    private void ResetTaiKhoan_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetTaiKhoan_btnActionPerformed
        MaNhanVienTK_txt.setText("");
        TenDangNhap_txt.setText("");
        MatKhau_txt.setText("");
        ChucVuTK_cmb.setSelectedIndex(0);

        SuaTaiKhoan_btn.setEnabled(false);
        XoaTaiKhoan_btn.setEnabled(false);

        MaNhanVienTK_txt.setEnabled(true);
        TenDangNhap_txt.setEnabled(true);
        MatKhau_txt.setEnabled(true);

        TaiKhoanTable_load();
    }//GEN-LAST:event_ResetTaiKhoan_btnActionPerformed

    //Click nút sửa tài khoản
    private void SuaTaiKhoan_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuaTaiKhoan_btnActionPerformed
        String sql = "UPDATE TaiKhoan SET TenChucVu = N'" + ChucVuTK_cmb.getSelectedItem().toString() + "' "
                + "WHERE TenDangNhap = N'" + TenDangNhap_txt.getText() + "'";
        boolean execute = cn.ExcuteQueryUpdateDB(sql);

        if (execute) {
            JOptionPane.showMessageDialog(rootPane, "Sửa quyền cho tài khoản thành công!");
            ResetTaiKhoan_btnActionPerformed(evt);
            TaiKhoanTable_load();
        }
    }//GEN-LAST:event_SuaTaiKhoan_btnActionPerformed

    //Click nút xóa tài khoản
    private void XoaTaiKhoan_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaTaiKhoan_btnActionPerformed
        try {
            String sql = "Delete TaiKhoan where TenDangNhap = N'" + TenDangNhap_txt.getText() + "' ";
            boolean execute = cn.ExcuteQueryUpdateDB(sql);
            if (execute) {
                JOptionPane.showMessageDialog(rootPane, "Xóa tài khoản thành công!");
                ResetTaiKhoan_btnActionPerformed(evt);
                TaiKhoanTable_load();
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_XoaTaiKhoan_btnActionPerformed

    //Click một ô trong bảng tài khoản
    private void TaiKhoan_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TaiKhoan_tblMouseClicked
        SuaTaiKhoan_btn.setEnabled(true);
        XoaTaiKhoan_btn.setEnabled(true);

        int x = DucAnh.mousePressed(evt, TaiKhoan_tbl);
        System.out.println(x);
        TenDangNhap_txt.setText(TaiKhoan_tbl.getValueAt(x, 1) + "");
        MatKhau_txt.setText(TaiKhoan_tbl.getValueAt(x, 2) + "");
        MaNhanVienTK_txt.setText(TaiKhoan_tbl.getValueAt(x, 3) + "");
        ChucVuTK_cmb.setSelectedItem(TaiKhoan_tbl.getValueAt(x, 4) + "");

        MaNhanVienTK_txt.setEnabled(false);
        TenDangNhap_txt.setEnabled(false);
        MatKhau_txt.setEnabled(false);
    }//GEN-LAST:event_TaiKhoan_tblMouseClicked

    //Click nút tìm kiếm nhân viên
    private void SearchNhanVien_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchNhanVien_btnActionPerformed
        if (SearchNhanVien_txt.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Hãy nhập từ khóa bạn muốn tìm kiếm!");
        } else if (SearchTypeNhanVien_cmb.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn loại tìm kiếm bạn muốn tìm kiếm!");
        } else {
            try {
                int searchtypeindex = SearchTypeNhanVien_cmb.getSelectedIndex();
                System.out.println(searchtypeindex);
                String searchtype = "";
                switch (searchtypeindex) {
                    case 1:
                        searchtype = "MaNhanVien";
                        break;
                    case 2:
                        searchtype = "TenNhanVien";
                        break;
                    case 3:
                        searchtype = "DiaChi";
                        break;
                    default:
                        break;
                }
                int number;
                Vector row = null;
                String sql = "select * from NhanVien Where " + searchtype + " LIKE N'%" + SearchNhanVien_txt.getText() + "%'";
                ResultSet rs = cn.ExcuteQueryGetTable(sql);
                ResultSetMetaData metadata = rs.getMetaData();
                number = metadata.getColumnCount();
                NhanVienTable.setRowCount(0);
                int index = 1;
                while (rs.next()) {
                    row = new Vector();
                    row.add(index);
                    index++;
                    for (int i = 1; i <= number; i++) {
                        row.addElement(rs.getString(i));
                    }

                    NhanVienTable.addRow(row);
                    NhanVien_tbl.setModel(NhanVienTable);

                }
                rs.close();
                JOptionPane.showMessageDialog(rootPane, "Tìm kiếm hoàn tất!");

            } catch (Exception e) {

            }
        }
    }//GEN-LAST:event_SearchNhanVien_btnActionPerformed


    private void SanPhamCTPN_cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SanPhamCTPN_cmbActionPerformed
    }//GEN-LAST:event_SanPhamCTPN_cmbActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        if (Search_txt.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Hãy nhập từ khóa bạn muốn tìm kiếm!");
        } else if (Search_cmb.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn loại tìm kiếm bạn muốn tìm kiếm!");
        } else {
            try {
                int searchtypeindex = Search_cmb.getSelectedIndex();
                System.out.println(searchtypeindex);
                String searchtype = "";
                switch (searchtypeindex) {
                    case 1:
                        searchtype = "MaKhachHang";
                        break;
                    case 2:
                        searchtype = "TenKhachHang";
                        break;
                    case 3:
                        searchtype = "SDTKhachHang";
                        break;
                    default:
                        break;
                }
                int number;
                Vector row = null;
                String sql = "select * from KhachHang Where " + searchtype + " LIKE N'%" + Search_txt.getText() + "%'";
                ResultSet rs = cn.ExcuteQueryGetTable(sql);
                ResultSetMetaData metadata = rs.getMetaData();
                number = metadata.getColumnCount();
                tbkh.setRowCount(0);
                int index = 1;
                while (rs.next()) {
                    row = new Vector();
                    row.add(index);
                    index++;
                    for (int i = 1; i <= number; i++) {
                        row.addElement(rs.getString(i));
                    }

                    tbkh.addRow(row);
                    KhachHang_tbl.setModel(tbkh);

                }
                rs.close();
                JOptionPane.showMessageDialog(rootPane, "Tìm kiếm hoàn tất!");

            } catch (Exception e) {

            }
        }
    }//GEN-LAST:event_SearchActionPerformed

    private void SearchTypeNhanVien_cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchTypeNhanVien_cmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchTypeNhanVien_cmbActionPerformed

    private void MaKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaKhachHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MaKhachHangActionPerformed

    private void SDTKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SDTKhachHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SDTKhachHangActionPerformed

    private void jComboBox14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox14ActionPerformed

    private void ChiTiet_tbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChiTiet_tbMouseClicked
        Suactpx_btn.setEnabled(true);
        Xoactpx_btn.setEnabled(true);

        int x = DucAnh.mousePressed(evt, ChiTiet_tb);

        MaCTPX.setText(ChiTiet_tb.getValueAt(x, 1) + "");
        MaPX_cmb.setSelectedItem(ChiTiet_tb.getValueAt(x, 2) + "");
        SanPham_cmb.setSelectedItem(ChiTiet_tb.getValueAt(x, 3) + "");
        SoLuong.setText(ChiTiet_tb.getValueAt(x, 4) + "");

        MaCTPX.setEnabled(false);
    }//GEN-LAST:event_ChiTiet_tbMouseClicked

    private void NgayLapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NgayLapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NgayLapActionPerformed

    private void MaPX_cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaPX_cmbActionPerformed

    }//GEN-LAST:event_MaPX_cmbActionPerformed

    private void SoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SoLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SoLuongActionPerformed

    private void TenKH_cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TenKH_cmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TenKH_cmbActionPerformed

    //Thay đổi giá trị trong jcombobox sản phẩm chi tiết phiếu nhập
    private void SanPhamCTPN_cmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SanPhamCTPN_cmbItemStateChanged
        String a = SanPhamCTPN_cmb.getSelectedItem().toString();
        String sql = "Select DonVi from SanPham where TenSanPham = N'" + a + "'";
        ResultSet rs = cn.ExcuteQueryGetTable(sql);
        String b = "";
        try {
            while (rs.next()) {
                b = rs.getString("DonVi");
                DonViNhapCTPN_txt.setText(b);
            }
        } catch (SQLException ex) {
            Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SanPhamCTPN_cmbItemStateChanged

    //Thay đổi giá trị trong jcombobox sản phẩm chi tiết phiếu xuất
    private void SanPham_cmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SanPham_cmbItemStateChanged
        String a = SanPham_cmb.getSelectedItem().toString();
        String sql = "Select DonVi from SanPham where TenSanPham = N'" + a + "'";
        ResultSet rs = cn.ExcuteQueryGetTable(sql);
        String b = "";
        try {
            while (rs.next()) {
                b = rs.getString("DonVi");
                DonViXuatCTPX_txt.setText(b);
            }
        } catch (SQLException ex) {
            Logger.getLogger(formChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SanPham_cmbItemStateChanged

    private void jPanel11ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel11ComponentHidden

    }//GEN-LAST:event_jPanel11ComponentHidden

    public void MaPX_cmb_addItems() throws SQLException {
        String sql = "SELECT MaPhieuXuat FROM PhieuXuat";
        ResultSet rs = cn.ExcuteQueryGetTable(sql);
        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
        while (rs.next()) {
            String value = rs.getString("MaPhieuXuat");
            comboBoxModel.addElement(value);
        }
        MaPX_cmb.setModel(comboBoxModel);
        rs.close();
    }

    //Hàm để update tồn kho của các sản phẩm
    public void TonKhoCalc() {
        String sql = "UPDATE SanPham\n"
                + "SET TonKho = COALESCE((SELECT SUM(SoLuongNhap) FROM ChiTietPhieuNhap WHERE ChiTietPhieuNhap.TenSanPham = SanPham.TenSanPham), 0)\n"
                + " - COALESCE((SELECT SUM(SoLuongXuat) FROM ChiTietPhieuXuat WHERE ChiTietPhieuXuat.TenSanPham = SanPham.TenSanPham), 0);";
        boolean execute = cn.ExcuteQueryUpdateDB(sql);
        if (execute) {
            System.out.println("Đã tính tồn kho cho các sản phẩm");
        }
    }

    //Load bảng thống kê
    String ThongKeHeader[] = {"STT", "Mã sản phẩm", "Tên sản phẩm", "Tồn kho"};
    DefaultTableModel ThongKeTable = new DefaultTableModel(ThongKeHeader, 0);

    public void ThongKeTable_load() {
        TonKhoCalc();
        ThongKe_tbl.getTableHeader().setReorderingAllowed(false);
        ThongKe_tbl.setDefaultEditor(Object.class, null);
        try {
            int number;
            Vector row = null;
            String sql = "select MaSanPham, TenSanPham, TonKho from SanPham";
            ResultSet rs = cn.ExcuteQueryGetTable(sql);
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            ThongKeTable.setRowCount(0);
            int index = 1;
            while (rs.next()) {
                row = new Vector();
                row.add(index);
                index++;
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }

                ThongKeTable.addRow(row);
                ThongKe_tbl.setModel(ThongKeTable);

            }
            rs.close();

        } catch (Exception e) {

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception e) {
            // If Nimbus is not available, you can set the GUI to another look and feel.
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formChinh().setVisible(true);
            }
        });
    }

    public void TenKH_cmb_addItems() throws SQLException {
        String sql = "SELECT TenKhachHang FROM KhachHang";
        ResultSet rs = cn.ExcuteQueryGetTable(sql);
        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
        while (rs.next()) {
            String value = rs.getString("TenKhachHang");
            comboBoxModel.addElement(value);
        }
        TenKH_cmb.setModel(comboBoxModel);
        rs.close();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CCCDNhanVien_txt;
    private javax.swing.JTable ChiTietPhieuNhap_tbl;
    private javax.swing.JTable ChiTiet_tb;
    private javax.swing.JComboBox<String> ChucVuTK_cmb;
    private javax.swing.JComboBox<String> ChucVu_cmb;
    private javax.swing.JTable ChucVu_tbl;
    private javax.swing.JPanel DangXuatPanel;
    private javax.swing.JTextField DiaChiKhachHang;
    private javax.swing.JTextField DiaChiNhanVien_txt;
    private javax.swing.JTextPane DonViNhapCTPN_txt;
    private javax.swing.JTextPane DonViXuatCTPX_txt;
    private javax.swing.JTextPane DonVi_txt;
    private javax.swing.JTextField EmailKhachHang;
    private javax.swing.JTextField GiaBan_txt;
    private javax.swing.JTextField GiaNhap_txt;
    private javax.swing.JComboBox<String> GioiTinh_cmb;
    private javax.swing.JTextPane HangSanXuat_txt;
    private javax.swing.JTable KhachHang_tbl;
    private javax.swing.JComboBox<String> LoaiKhachHang_cmb;
    private javax.swing.JComboBox<String> LoaiSanPham_cmb;
    private javax.swing.JTable LoaiSanPham_tbl;
    private javax.swing.JTextField MaCTPN_txt;
    private javax.swing.JTextField MaCTPX;
    private javax.swing.JTextField MaChucVu_txt;
    private javax.swing.JTextField MaKhachHang;
    private javax.swing.JTextField MaLoaiSanPham_txt;
    private javax.swing.JTextField MaNhanVienTK_txt;
    private javax.swing.JTextField MaNhanVien_txt;
    private javax.swing.JComboBox<String> MaPX_cmb;
    private javax.swing.JComboBox<String> MaPhieuNhap_cmb;
    private javax.swing.JTextField MaPhieuNhap_txt;
    private javax.swing.JTextField MaPhieuXuat;
    private javax.swing.JTextField MaSanPham_txt;
    private javax.swing.JTextField MatKhau_txt;
    private javax.swing.JTabbedPane Menu_pane;
    private javax.swing.JTextField NgayLap;
    private javax.swing.JTextPane NgayNhap_txt;
    private javax.swing.JTextPane NgaySinhNhanVien_txt;
    private javax.swing.JTable NhanVienTheoChucVu_tbl;
    private javax.swing.JComboBox<String> NhanVien_cmb;
    private javax.swing.JTabbedPane NhanVien_pane;
    private javax.swing.JTable NhanVien_tbl;
    private javax.swing.JTable PhieuNhap_tbl;
    private javax.swing.JTable PhieuXuatKho_tbl;
    private javax.swing.JButton Reset;
    private javax.swing.JButton ResetCTPN_btn;
    private javax.swing.JButton ResetChucVu_btn;
    private javax.swing.JButton ResetLoaiSanPham_btn;
    private javax.swing.JButton ResetNhanVien_btn;
    private javax.swing.JButton ResetPhieuNhap_btn;
    private javax.swing.JButton ResetSanPham_btn;
    private javax.swing.JButton ResetTaiKhoan_btn;
    private javax.swing.JButton Resetctpx_btn;
    private javax.swing.JButton Resetpxk_btn;
    private javax.swing.JTextField SDTKhachHang;
    private javax.swing.JTextField SDTNhanVien_txt;
    private javax.swing.JComboBox<String> SDTType_cmb;
    private javax.swing.JComboBox<String> SDT_cmb;
    private javax.swing.JComboBox<String> SanPhamCTPN_cmb;
    private javax.swing.JTable SanPhamTheoLoai_tbl;
    private javax.swing.JComboBox<String> SanPham_cmb;
    private javax.swing.JTabbedPane SanPham_pane;
    private javax.swing.JTable SanPham_tbl;
    private javax.swing.JButton Search;
    private javax.swing.JButton SearchNhanVien_btn;
    private javax.swing.JTextField SearchNhanVien_txt;
    private javax.swing.JButton SearchSanPham_btn;
    private javax.swing.JTextField SearchSanPham_txt;
    private javax.swing.JComboBox<String> SearchTypeNhanVien_cmb;
    private javax.swing.JComboBox<String> SearchTypeSanPham_cmb;
    private javax.swing.JComboBox<String> Search_cmb;
    private javax.swing.JTextField Search_txt;
    private javax.swing.JTextField SoLuong;
    private javax.swing.JTextField SoLuongCTPN_txt;
    private javax.swing.JButton SuaCTPN_btn;
    private javax.swing.JButton SuaChucVu_btn;
    private javax.swing.JButton SuaKhachHang_btn;
    private javax.swing.JButton SuaLoaiSanPham_btn;
    private javax.swing.JButton SuaNhanVien_btn;
    private javax.swing.JButton SuaPXK_btn;
    private javax.swing.JButton SuaPhieuNhap_btn;
    private javax.swing.JButton SuaSanPham_btn;
    private javax.swing.JButton SuaTaiKhoan_btn;
    private javax.swing.JButton Suactpx_btn;
    private javax.swing.JTable TaiKhoan_tbl;
    private javax.swing.JTextField TenChucVu_txt;
    private javax.swing.JTextField TenDangNhap_txt;
    private javax.swing.JComboBox<String> TenKH_cmb;
    private javax.swing.JTextField TenKhachHang;
    private javax.swing.JTextField TenLoaiSanPham_txt;
    private javax.swing.JComboBox<String> TenNV_cmb;
    private javax.swing.JTextField TenNhanVien_txt;
    private javax.swing.JTextField TenSanPham_txt;
    private javax.swing.JButton ThemCTPN_btn;
    private javax.swing.JButton ThemChucVu_btn;
    private javax.swing.JButton ThemKhachHang_btn;
    private javax.swing.JButton ThemLoaiSanPham_btn;
    private javax.swing.JButton ThemNhanVien_btn;
    private javax.swing.JButton ThemPhieuNhap_btn;
    private javax.swing.JButton ThemSanPham_btn;
    private javax.swing.JButton ThemTaiKhoan_btn;
    private javax.swing.JButton Themctpx_btn;
    private javax.swing.JButton Thempxk_btn;
    private javax.swing.JTable ThongKe_tbl;
    private javax.swing.JButton XoaCTPN_btn;
    private javax.swing.JButton XoaChucVu_btn;
    private javax.swing.JButton XoaKhachHang_btn;
    private javax.swing.JButton XoaLoaiSanPham_btn;
    private javax.swing.JButton XoaNhanVien_btn;
    private javax.swing.JButton XoaSanPham_btn;
    private javax.swing.JButton XoaTaiKhoan_btn;
    private javax.swing.JButton Xoactpx_btn;
    private javax.swing.JComboBox<String> jComboBox14;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    // End of variables declaration//GEN-END:variables

    private void While(boolean next) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
